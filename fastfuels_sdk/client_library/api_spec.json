{"openapi":"3.1.0","info":{"title":"FastFuels API","description":"A JSON API for creating, editing, and retrieving 3D fuels data for next generation fire behavior models.","version":"0.1.0"},"servers":[{"url":"https://api.fastfuels.silvxlabs.com"}],"paths":{"/":{"get":{"tags":["Index"],"summary":"Index","operationId":"index","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/cookies":{"get":{"tags":["Cookies"],"summary":"Get Cookie","operationId":"get_cookie","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}},"delete":{"tags":["Cookies"],"summary":"Delete Cookie","operationId":"delete_cookie","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/v1/keys":{"post":{"tags":["API Keys"],"summary":"New API key","description":"Create a new API key","operationId":"create_key","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateKeyRequest"}}}},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Key"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"get":{"tags":["API Keys"],"summary":"List keys","description":"List API keys for both users and applications","operationId":"list_keys","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"parameters":[{"name":"page","in":"query","required":false,"schema":{"type":"integer","minimum":0,"default":0,"title":"Page"}},{"name":"size","in":"query","required":false,"schema":{"type":"integer","maximum":100,"minimum":1,"default":100,"title":"Size"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListKeysResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/keys/{keyId}":{"get":{"tags":["API Keys"],"summary":"Get key","description":"Get an API key by ID","operationId":"get_key_by_id","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"parameters":[{"name":"keyId","in":"path","required":true,"schema":{"type":"string","title":"Keyid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Key"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["API Keys"],"summary":"Delete key","description":"Delete an API key by ID","operationId":"delete_key","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"parameters":[{"name":"keyId","in":"path","required":true,"schema":{"type":"string","title":"Keyid"}}],"responses":{"204":{"description":"Successful Response"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/applications":{"post":{"tags":["Applications"],"summary":"New application","description":"Create a new application","operationId":"create_application","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateApplicationRequest"}}}},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Application"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"get":{"tags":["Applications"],"summary":"List application","description":"List applications for authenticated user","operationId":"list_applications","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"parameters":[{"name":"page","in":"query","required":false,"schema":{"type":"integer","minimum":0,"default":0,"title":"Page"}},{"name":"size","in":"query","required":false,"schema":{"type":"integer","maximum":100,"minimum":1,"default":100,"title":"Size"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListApplicationsResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/applications/{applicationId}":{"get":{"tags":["Applications"],"summary":"Get Application","description":"Get an application by ID","operationId":"get_application","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"parameters":[{"name":"applicationId","in":"path","required":true,"schema":{"type":"string","title":"Applicationid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Application"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"patch":{"tags":["Applications"],"summary":"Update Application","description":"Update an application by ID","operationId":"update_application","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"parameters":[{"name":"applicationId","in":"path","required":true,"schema":{"type":"string","title":"Applicationid"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateApplicationRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Application"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["Applications"],"summary":"Delete application","description":"Delete an application by ID","operationId":"delete_application","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"parameters":[{"name":"applicationId","in":"path","required":true,"schema":{"type":"string","title":"Applicationid"}}],"responses":{"204":{"description":"Successful Response"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/domains":{"post":{"tags":["Domains"],"summary":"Create Domain","description":"# Create Domain Endpoint\n\nThis endpoint creates a new domain resource based on a spatial extent and additional details provided by the user. The domain resource acts as the spatial container for all other resources that create data within the system.\n\n## What is a Domain Resource?\n\nA domain resource is a spatial container that represents a specific geographical area. It includes metadata such as the name, description, creation date, and the spatial extent defined by geographic coordinates. Domains are used to organize and manage spatial data and operations within a defined area. The data can be vectorized, such as holding features or trees in an inventory, or rasterized, such as a 3D canopy fuel grid or a Digital Elevation Model (DEM).\n\n## Endpoint: `POST /domains`\n\n### Request Body\n\nThe request body should be a GeoJSON object defined by the [GeoJSON specification (RFC 7946)](https://datatracker.ietf.org/doc/html/rfc7946). It can be either a Feature or a FeatureCollection. The required fields differ slightly between these two types, but there are some shared fields as well.\n\n#### Shared Fields\n\nThese fields are required for both Feature and FeatureCollection inputs:\n\n- **type**: (string) Must be either \"Feature\" or \"FeatureCollection\".\n- **name**: (string, optional) The name of the domain.\n- **description**: (string, optional) A brief description of the domain.\n- **horizontalResolution**: (float) The horizontal resolution in meters of a regular grid representation of the domain.\n- **verticalResolution**: (float) The vertical resolution in meters of a regular grid representation of the domain.\n- **crs**: (GeoJsonCRS) The GeoJSON specification formatted coordinate reference system (CRS) of the domain.\n  - **type**: (string) Must be \"name\".\n  - **properties**: (object) The properties object containing the CRS details.\n    - **name**: (string) The name of the CRS, e.g., \"EPSG:4326\". Must be either 'local' or a valid authority string.\n\n#### Feature-specific Fields\n\nWhen the input type is \"Feature\", the following additional field is required:\n\n- **geometry**: (GeoJSON Geometry object) A GeoJSON geometry object defining the spatial location of the domain.\n  - **type**: (string) Must be a valid GeoJSON type, e.g., \"Polygon\".\n  - **coordinates**: (array) An array of coordinates defining the geometry.\n\n#### FeatureCollection-specific Fields\n\nWhen the input type is \"FeatureCollection\", the following additional field is required:\n\n- **features**: (array of Feature objects) An array of Feature objects. Each Feature object should have:\n  - **type**: (string) Must be \"Feature\".\n  - **geometry**: (GeoJSON Geometry object) As described in the Feature-specific fields.\n\n### Response\n\nOn successful creation, the endpoint returns the newly created domain resource with the following fields:\n\n- **id**: (string) A unique identifier for the domain.\n- **name**: (string) The name of the domain.\n- **description**: (string) A brief description of the domain.\n- **createdOn**: (datetime) The date and time the domain was created.\n- **modifiedOn**: (datetime) The date and time the domain was last modified.\n- **type**: (string) Will be \"FeatureCollection\".\n- **features**: (array) An array of two Feature objects:\n  1. The domain feature (padded bounding box):\n     - **type**: (string) Will be \"Feature\".\n     - **geometry**: (GeoJSON) The GeoJSON geometry representing the padded spatial extent of the domain.\n     - **properties**: (object) Additional properties of the domain feature.\n       - **name**: (string) Will be \"domain\".\n       - **area**: (float) The area of the domain in square meters.\n       - **perimeter**: (float) The perimeter of the domain in meters.\n  2. The input feature:\n     - **type**: (string) Will be \"Feature\".\n     - **geometry**: (GeoJSON) The GeoJSON geometry representing the original input geometry.\n     - **properties**: (object) Additional properties of the input feature.\n       - **name**: (string) Will be \"input\".\n       - **area**: (float) The area of the input geometry in square meters.\n       - **perimeter**: (float) The perimeter of the input geometry in meters.\n- **horizontalResolution**: (float) The horizontal resolution of the domain.\n- **verticalResolution**: (float) The vertical resolution of the domain.\n- **crs**: (GeoJsonCRS) The coordinate reference system of the domain.\n- **utmAuthorityString**: (string, optional) The UTM authority string if the input was projected to UTM.\n\n### Processing from Request to Response\n\nThe system performs several processing steps to convert the Request Body into the Response Body:\n\n1. **CRS Handling and Projection**:\n   - If the input CRS is geographic (e.g., EPSG:4326), the geometry is automatically projected to the appropriate UTM zone.\n   - If the input CRS is already projected, the domain will keep that CRS.\n   - If the input CRS is 'local', the spatial data is assumed to be NOT geo-referenced, and no projection is performed.\n\n2. **Bounding Box Calculation**:\n   - The system calculates the bounding box of the input geometry (or the combined geometries for a FeatureCollection).\n\n3. **Resolution-based Padding**:\n   - The bounding box is padded out to the nearest multiple of the user-provided horizontal resolution.\n\n4. **FeatureCollection Creation**:\n   - The system creates a FeatureCollection with two features: the padded bounding box (domain) and the original input geometry.\n\nThese steps ensure that the domain's extent is regularized, aligned with the specified resolution, and in a suitable projected coordinate system (when applicable), which allows for subsequent grid-based operations.\n\n### Important Notes\n\n1. **Projection**: The domain will always be stored in a projected coordinate system if the input is geographic. This ensures consistency and accuracy for spatial operations within the domain.\n\n2. **UTM Zone Selection**: When projecting from a geographic CRS, the system automatically selects the appropriate UTM zone based on the centroid of the input geometry.\n\n3. **FeatureCollection Handling**: When a FeatureCollection is provided as input, the domain will be created based on the combined extent of all features in the collection.\n\n4. **Zero Area Handling**: If the spatial extent has zero area (e.g., a point or line), the endpoint will raise an error.\n\n5. **Resolution Alignment**: The spatial extent is padded out to the nearest multiple of horizontal and vertical resolution (in meters) to ensure grid alignment.\n\n6. **Maximum Area**: Currently, the maximum area for a domain is 16 square kilometers. We are planning to increase this limit in the future. If this limitation is an issue for your use case, please contact us for assistance.\n\n7. **CRS Preservation**: If you provide data in a specific projected CRS, that CRS will be preserved in the domain. This is useful for maintaining consistency with existing data sources or specific regional requirements.\n\n### Error Responses\n\n- **422 Unprocessable Entity**: The spatial extent is invalid.\n  - **Detail**: \"Invalid spatial extent. The area of the spatial extent must be greater than zero meters.\"\n  - **Detail**: \"Invalid spatial extent. The area of the spatial extent must be less than sixteen square kilometers.\"\n- **500 Internal Server Error**: An error occurred while creating the domain resource.","operationId":"create_domain","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateDomainRequest"},"examples":{"feature collection WGS84":{"value":{"type":"FeatureCollection","features":[{"type":"Feature","properties":{},"geometry":{"coordinates":[[[-114.09957018646286,46.82933208815811],[-114.10141707482919,46.828370407248826],[-114.10010954324228,46.82690548814563],[-114.09560673134018,46.8271123684554],[-114.09592544216444,46.829058122675065],[-114.09957018646286,46.82933208815811]]],"type":"Polygon"}}],"name":"Example","description":"This is an example domain.","horizontalResolution":2,"verticalResolution":1},"summary":"Example WGS84 FeatureCollection","description":"This example creates a domain from a FeatureCollection GeoJSON object. The CRS of the FeatureCollection is not provided so it is assumed to be 'EPSG:4326'."},"feature collection EPSG:5070":{"value":{"type":"FeatureCollection","features":[{"type":"Feature","properties":{},"geometry":{"type":"Polygon","coordinates":[[[-1378369.2301032573,2780205.4139660406],[-1377929.1090080582,2780103.7105029486],[-1377867.967897384,2780367.5735851782],[-1378308.0924563275,2780469.278380568],[-1378369.2301032573,2780205.4139660406]]]}}],"name":"Example","description":"This is an example domain.","horizontalResolution":2,"verticalResolution":1,"crs":{"properties":{"name":"EPSG:5070"},"type":"name"}},"summary":"Example EPSG:5070 FeatureCollection","description":"This example creates a domain from a FeatureCollection GeoJSON object with a CRS of 'EPSG:5070'. Note that the CRS is explicitly set in the GeoJSON object."},"feature WGS84":{"value":{"type":"Feature","geometry":{"coordinates":[[[-114.09957018646286,46.82933208815811],[-114.10141707482919,46.828370407248826],[-114.10010954324228,46.82690548814563],[-114.09560673134018,46.8271123684554],[-114.09592544216444,46.829058122675065],[-114.09957018646286,46.82933208815811]]],"type":"Polygon"},"properties":{},"name":"Example","description":"This is an example domain.","horizontalResolution":2,"verticalResolution":1},"summary":"Example WGS84 Feature","description":"This example creates a domain from a Feature GeoJSON object with a default crs of 'EPSG:4326'."},"feature UTM":{"value":{"type":"Feature","properties":{},"geometry":{"type":"Polygon","coordinates":[[[721202.0930596117,5190283.73496937],[721065.1931226599,5190171.675898871],[721170.9221922038,5190012.585851082],[721513.4767988612,5190048.269428906],[721481.1717487838,5190263.570731599],[721202.0930596117,5190283.73496937]]]},"crs":{"type":"name","properties":{"name":"urn:ogc:def:crs:EPSG::32611"}},"name":"Example","description":"This is an example domain.","horizontalResolution":2,"verticalResolution":1},"summary":"Example UTM Feature","description":"This example creates a domain from a polygon feature with UTM coordinates. Because the coordinates are in UTM, the crs field must be explicitly set according to the GeoJSON specification."},"feature local":{"value":{"type":"Feature","geometry":{"coordinates":[[[0,0],[0,100],[100,100],[100,0],[0,0]]],"type":"Polygon"},"properties":{},"name":"Example","description":"This is an example domain.","horizontalResolution":2,"verticalResolution":1,"crs":{"properties":{"name":"local"},"type":"name"}},"summary":"Example Local Feature","description":"Example of a domain with spatial data in a local coordinate system (with meter units). The crs field is set to 'local' to indicate that the coordinates are in a local coordinate system."}}}}},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Domain"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"get":{"tags":["Domains"],"summary":"List Domains","description":"# List Domains Endpoint\n\nThis endpoint retrieves a paginated list of domain resources based on the\nquery parameters provided by the user.\n\n## Endpoint: `GET /domains`\n\n### Query Parameters\n\nTo retrieve a list of domains, the following query parameters can be used:\n\n- **page**: (integer, optional) The page number to retrieve. Page number is zero-indexed. Default is 0.\n- **size**: (integer, optional) The number of resources to retrieve per page. Minimum is 1 and maximum is 1000. Default is 100.\n- **sortBy**: (string, optional) The field by which to sort the domains. Valid values are:\n  - \"createdOn\"\n  - \"modifiedOn\"\n  - \"name\"\n- **sortOrder**: (string, optional) The order in which to sort the results. Valid values are:\n  - \"ascending\"\n  - \"descending\"\n\n### Response\n\nThe response is a paginated list of domain resources, including metadata about the current page and the size of each page.\n\n- **domains**: (array) A list of Domain objects.\n- **currentPage**: (integer) The current page number.\n- **pageSize**: (integer) The number of domains per page.\n- **totalItems**: (integer) The total number of domain resources that belong to the user.\n\nEach Domain object in the list follows the Domain schema.\n\n### Example Request\n\n```http\nGET /domains?page=0&size=10&sortBy=createdOn&sortOrder=ascending\n```\n\n### Important Notes\n\n1. The `page` parameter is zero-indexed, meaning that the first page is `0`.\n2. The `size` parameter determines the number of domains returned per page, with a minimum of 1 and a maximum of 1000.\n3. The `sortBy` parameter allows sorting by specific fields, and the `sortOrder` parameter determines the order of sorting (ascending or descending).\n\n### Error Responses\n\n- **422 Unprocessable Entity**: Invalid query parameters.\n  - **Detail**: \"Invalid value for query parameter 'page'. Must be a non-negative integer.\"\n  - **Detail**: \"Invalid value for query parameter 'size'. Must be an integer between 1 and 1000.\"\n- **500 Internal Server Error**: An error occurred while listing the domain resources.","operationId":"list_domains","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"parameters":[{"name":"page","in":"query","required":false,"schema":{"type":"integer","minimum":0,"description":"The page number to retrieve. Page number is zero-indexed.","default":0,"title":"Page"},"description":"The page number to retrieve. Page number is zero-indexed."},{"name":"size","in":"query","required":false,"schema":{"type":"integer","maximum":1000,"minimum":1,"description":"The number of resources to retrieve per page.","default":100,"title":"Size"},"description":"The number of resources to retrieve per page."},{"name":"sortBy","in":"query","required":false,"schema":{"allOf":[{"$ref":"#/components/schemas/DomainSortField"}],"title":"Sortby"}},{"name":"sortOrder","in":"query","required":false,"schema":{"allOf":[{"$ref":"#/components/schemas/DomainSortOrder"}],"title":"Sortorder"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListDomainResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/domains/{domain_id}":{"get":{"tags":["Domains"],"summary":"Get Domain","description":"# Get Domain Endpoint\n\nThis endpoint retrieves a specific domain resource based on the provided domain ID.\n\n## Endpoint: `GET /domains/{domain_id}`\n\n### Path Parameters\n\nTo retrieve a specific domain, the following path parameter is required:\n\n- **domain_id**: (string) The unique identifier of the domain to retrieve.\n\n### Response\n\nThe response returns the details of the requested domain resource, including its metadata and spatial information.\n\n- **id**: (string) A unique identifier for the domain.\n- **name**: (string) The name of the domain.\n- **description**: (string) A brief description of the domain.\n- **createdOn**: (datetime) The date and time the domain was created.\n- **modifiedOn**: (datetime) The date and time the domain was last modified.\n- **type**: (string) Always \"FeatureCollection\".\n- **features**: (array) An array of two Feature objects:\n  1. The domain feature (padded bounding box):\n     - **type**: (string) Will be \"Feature\".\n     - **geometry**: (GeoJSON) The GeoJSON geometry representing the padded spatial extent of the domain.\n     - **properties**: (object) Additional properties of the domain feature.\n       - **name**: (string) Will be \"domain\".\n       - **area**: (float) The area of the domain in square meters.\n       - **perimeter**: (float) The perimeter of the domain in meters.\n  2. The input feature:\n     - **type**: (string) Will be \"Feature\".\n     - **geometry**: (GeoJSON) The GeoJSON geometry representing the original input geometry.\n     - **properties**: (object) Additional properties of the input feature.\n       - **name**: (string) Will be \"input\".\n       - **area**: (float) The area of the input geometry in square meters.\n       - **perimeter**: (float) The perimeter of the input geometry in meters.\n- **horizontalResolution**: (float) The horizontal resolution of the domain in meters.\n- **verticalResolution**: (float) The vertical resolution of the domain in meters.\n- **crs**: (GeoJsonCRS) The coordinate reference system of the domain.\n- **utmAuthorityString**: (string, optional) The UTM authority string if the input was projected to UTM.\n\n### Error Responses\n\n- **404 Not Found**: The specified domain does not exist or the user does not have access to it.\n  - **Detail**: \"Resource not found.\"\n- **500 Internal Server Error**: An error occurred while retrieving the domain resource.\n  - **Detail**: \"An error occurred while getting the domain resource.\"","operationId":"get_domain","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"parameters":[{"name":"domain_id","in":"path","required":true,"schema":{"type":"string","title":"Domain Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Domain"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"patch":{"tags":["Domains"],"summary":"Update Domain","description":"# Update Domain Endpoint\n\nThis endpoint updates an existing domain resource based on the provided domain ID and request body. Users can modify specific fields of the domain, while other fields remain unchanged.\n\n## Endpoint: `PATCH /domains/{domain_id}`\n\n### Path Parameters\n\nTo update a specific domain, the following path parameter is required:\n\n- **domain_id**: (string) The unique identifier of the domain to update.\n\n### Request Body\n\nTo update a domain, the request body should include one or more of the following fields:\n\n- **name**: (string, optional) The name of the domain.\n- **description**: (string, optional) A brief description of the domain.\n- **tags**: (array of strings, optional) A list of tags associated with the domain.\n\n### Fields that Can Be Updated\n\n- **name**: The name of the domain.\n- **description**: A brief description of the domain.\n- **tags**: The list of tags associated with the domain.\n\n### Fields that Cannot Be Updated\n\nThe following fields cannot be updated. If you wish to change these fields, you need to create a new domain resource with the desired values:\n\n- **id**: The unique identifier for the domain.\n- **createdOn**: The date and time the domain was created.\n- **type**: Always \"FeatureCollection\".\n- **features**: The FeatureCollection containing the domain and input geometries.\n- **horizontalResolution**: The horizontal resolution of the domain.\n- **verticalResolution**: The vertical resolution of the domain.\n- **crs**: The coordinate reference system of the domain.\n- **utmAuthorityString**: The UTM authority string of the domain.\n\n### Response\n\nThe response returns the updated domain resource with the following fields:\n\n- **id**: (string) A unique identifier for the domain.\n- **name**: (string) The name of the domain.\n- **description**: (string) A brief description of the domain.\n- **createdOn**: (datetime) The date and time the domain was created.\n- **modifiedOn**: (datetime) The date and time the domain was last modified.\n- **type**: (string) Always \"FeatureCollection\".\n- **features**: (array) An array of two Feature objects:\n  1. The domain feature (padded bounding box):\n     - **type**: (string) Will be \"Feature\".\n     - **geometry**: (GeoJSON) The GeoJSON geometry representing the padded spatial extent of the domain.\n     - **properties**: (object) Additional properties of the domain feature.\n       - **name**: (string) Will be \"domain\".\n       - **area**: (float) The area of the domain in square meters.\n       - **perimeter**: (float) The perimeter of the domain in meters.\n  2. The input feature:\n     - **type**: (string) Will be \"Feature\".\n     - **geometry**: (GeoJSON) The GeoJSON geometry representing the original input geometry.\n     - **properties**: (object) Additional properties of the input feature.\n       - **name**: (string) Will be \"input\".\n       - **area**: (float) The area of the input geometry in square meters.\n       - **perimeter**: (float) The perimeter of the input geometry in meters.\n- **horizontalResolution**: (float) The horizontal resolution of the domain.\n- **verticalResolution**: (float) The vertical resolution of the domain.\n- **crs**: (GeoJsonCRS) The coordinate reference system of the domain.\n- **utmAuthorityString**: (string, optional) The UTM authority string if the input was projected to UTM.\n- **tags**: (array of strings) A list of tags associated with the domain.\n\n### Important Notes\n\n1. Only the **name**, **description**, and **tags** fields can be updated. If you wish to change any other fields (such as features, horizontalResolution, verticalResolution, crs, etc.), you must create a new domain resource with the desired values.\n2. The **modifiedOn** field will be automatically updated to the current date and time whenever any updatable field is changed.\n\n### Error Responses\n\n- **404 Not Found**: The specified domain does not exist or the user does not have access to it.\n  - **Detail**: \"Resource not found.\"\n- **500 Internal Server Error**: An error occurred while updating the domain resource.\n  - **Detail**: \"An error occurred while updating the domain resource.\"","operationId":"update_domain","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"parameters":[{"name":"domain_id","in":"path","required":true,"schema":{"type":"string","title":"Domain Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateDomainRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Domain"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["Domains"],"summary":"Delete Domain","description":"# Delete Domain Endpoint\n\nThis endpoint deletes an existing domain resource based on the provided domain ID.\n\n## Endpoint: `DELETE /domains/{domain_id}`\n\n### Path Parameters\n\nTo delete a specific domain, the following path parameter is required:\n\n- **domain_id**: (string) The unique identifier of the domain to delete.\n\n### Response\n\nThe response does not return any content on a successful deletion and will have a status code of 204 No Content.\n\n### Example Request\n\n```http\nDELETE /domains/1e7d8d3c9f8b4c3ba9e7c3b4f8d7a9c1\n```\n\n### Example Response\n\n```\nHTTP/1.1 204 No Content\n```\n\n### Important Notes\n\n1. Deleting a domain is a permanent action and cannot be undone. Once a domain is deleted, it is removed from the database and cannot be recovered.\n2. Ensure that you have the correct domain ID before making the delete request to avoid accidentally deleting the wrong domain.\n\n### Error Responses\n\n- **404 Not Found**: The specified domain does not exist or the user does not have access to it.\n  - **Detail**: \"Resource not found.\"\n- **500 Internal Server Error**: An error occurred while deleting the domain resource.\n  - **Detail**: \"An error occurred while deleting the domain resource.\"\n\n### Example Error Response\n\n```json\n{\n  \"detail\": \"Resource not found.\"\n}\n```\n\n### Example Internal Server Error Response\n\n```json\n{\n  \"detail\": \"An error occurred while deleting the domain resource.\"\n}\n```","operationId":"delete_domain","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"parameters":[{"name":"domain_id","in":"path","required":true,"schema":{"type":"string","title":"Domain Id"}}],"responses":{"204":{"description":"Successful Response"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/domains/preview":{"post":{"tags":["Domains"],"summary":"Preview Domain","description":"# Preview Domain Endpoint\n\nThis endpoint processes a CreateDomainRequest and returns a Domain object without saving the data to the database. It allows users to preview what their domain will look like before actually creating it.\n\n## Endpoint: `POST /domains/preview`\n\n### Request Body\n\nThe request body should be a GeoJSON object defined by the [GeoJSON specification (RFC 7946)](https://datatracker.ietf.org/doc/html/rfc7946). It can be either a Feature or a FeatureCollection. The structure is identical to the Create Domain endpoint's request body.\n\n#### Shared Fields\n\n- **type**: (string) Must be either \"Feature\" or \"FeatureCollection\".\n- **name**: (string, optional) The name of the domain.\n- **description**: (string, optional) A brief description of the domain.\n- **horizontalResolution**: (float) The horizontal resolution in meters of a regular grid representation of the domain.\n- **verticalResolution**: (float) The vertical resolution in meters of a regular grid representation of the domain.\n- **crs**: (GeoJsonCRS) The GeoJSON specification formatted coordinate reference system (CRS) of the domain.\n  - **type**: (string) Must be \"name\".\n  - **properties**: (object) The properties object containing the CRS details.\n    - **name**: (string) The name of the CRS, e.g., \"EPSG:4326\". Must be either 'local' or a valid authority string.\n- **tags**: (array of strings, optional) A list of tags associated with the domain.\n\n#### Feature-specific Fields\n\nWhen the input type is \"Feature\", the following additional field is required:\n\n- **geometry**: (GeoJSON Geometry object) A GeoJSON geometry object defining the spatial location of the domain.\n  - **type**: (string) Must be a valid GeoJSON type, e.g., \"Polygon\".\n  - **coordinates**: (array) An array of coordinates defining the geometry.\n\n#### FeatureCollection-specific Fields\n\nWhen the input type is \"FeatureCollection\", the following additional field is required:\n\n- **features**: (array of Feature objects) An array of Feature objects. Each Feature object should have:\n  - **type**: (string) Must be \"Feature\".\n  - **geometry**: (GeoJSON Geometry object) As described in the Feature-specific fields.\n\n### Response\n\nThe response returns a preview of the domain resource with the following fields:\n\n- **id**: (string) Will always be \"preview\" for this endpoint.\n- **name**: (string) The name of the domain.\n- **description**: (string) A brief description of the domain.\n- **createdOn**: (datetime) The current date and time.\n- **modifiedOn**: (datetime) The current date and time.\n- **type**: (string) Always \"FeatureCollection\".\n- **features**: (array) An array of two Feature objects:\n  1. The domain feature (padded bounding box):\n     - **type**: (string) Will be \"Feature\".\n     - **geometry**: (GeoJSON) The GeoJSON geometry representing the padded spatial extent of the domain.\n     - **properties**: (object) Additional properties of the domain feature.\n       - **name**: (string) Will be \"domain\".\n       - **area**: (float) The area of the domain in square meters.\n       - **perimeter**: (float) The perimeter of the domain in meters.\n  2. The input feature:\n     - **type**: (string) Will be \"Feature\".\n     - **geometry**: (GeoJSON) The GeoJSON geometry representing the original input geometry.\n     - **properties**: (object) Additional properties of the input feature.\n       - **name**: (string) Will be \"input\".\n       - **area**: (float) The area of the input geometry in square meters.\n       - **perimeter**: (float) The perimeter of the input geometry in meters.\n- **horizontalResolution**: (float) The horizontal resolution of the domain.\n- **verticalResolution**: (float) The vertical resolution of the domain.\n- **crs**: (GeoJsonCRS) The coordinate reference system of the domain.\n- **utmAuthorityString**: (string, optional) The UTM authority string if the input was projected to UTM.\n- **tags**: (array of strings) A list of tags associated with the domain.\n\n### Processing\n\nThe preview endpoint performs the same processing steps as the create endpoint:\n\n1. **CRS Handling and Projection**: Projects the geometry to UTM if necessary.\n2. **Bounding Box Calculation**: Calculates the bounding box of the input geometry.\n3. **Resolution-based Padding**: Pads the bounding box to align with the specified resolution.\n4. **FeatureCollection Creation**: Creates a FeatureCollection with the padded domain and original input geometries.\n\n### Important Notes\n\n1. This endpoint does not save any data to the database. It's purely for preview purposes.\n2. The `id` field will always be \"preview\" in the response.\n3. The `createdOn` and `modifiedOn` fields will be set to the current time but are not persisted.\n4. All the same validations and checks applied in the create endpoint are also applied here, including area limitations and CONUS checks.\n\n### Error Responses\n\n- **422 Unprocessable Entity**: The spatial extent is invalid.\n  - **Detail**: \"Invalid spatial extent. The area of the spatial extent must be greater than zero meters.\"\n  - **Detail**: \"Invalid spatial extent. The area of the spatial extent must be less than sixteen square kilometers.\"\n  - **Detail**: \"Invalid spatial extent. The spatial extent must be entirely within CONUS.\"\n- **500 Internal Server Error**: An error occurred while previewing the domain resource.\n  - **Detail**: \"An error occurred while previewing the domain resource.\"","operationId":"preview_domain","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateDomainRequest"},"examples":{"feature collection WGS84":{"summary":"Example WGS84 FeatureCollection","description":"This example creates a domain from a FeatureCollection GeoJSON object. The CRS of the FeatureCollection is not provided so it is assumed to be 'EPSG:4326'.","value":{"type":"FeatureCollection","features":[{"type":"Feature","properties":{},"geometry":{"coordinates":[[[-114.09957018646286,46.82933208815811],[-114.10141707482919,46.828370407248826],[-114.10010954324228,46.82690548814563],[-114.09560673134018,46.8271123684554],[-114.09592544216444,46.829058122675065],[-114.09957018646286,46.82933208815811]]],"type":"Polygon"}}],"name":"Example","description":"This is an example domain.","horizontalResolution":2,"verticalResolution":1}},"feature collection EPSG:5070":{"summary":"Example EPSG:5070 FeatureCollection","description":"This example creates a domain from a FeatureCollection GeoJSON object with a CRS of 'EPSG:5070'. Note that the CRS is explicitly set in the GeoJSON object.","value":{"type":"FeatureCollection","features":[{"type":"Feature","properties":{},"geometry":{"type":"Polygon","coordinates":[[[-1378369.2301032573,2780205.4139660406],[-1377929.1090080582,2780103.7105029486],[-1377867.967897384,2780367.5735851782],[-1378308.0924563275,2780469.278380568],[-1378369.2301032573,2780205.4139660406]]]}}],"name":"Example","description":"This is an example domain.","horizontalResolution":2,"verticalResolution":1,"crs":{"properties":{"name":"EPSG:5070"},"type":"name"}}},"feature WGS84":{"summary":"Example WGS84 Feature","description":"This example creates a domain from a Feature GeoJSON object with a default crs of 'EPSG:4326'.","value":{"type":"Feature","geometry":{"coordinates":[[[-114.09957018646286,46.82933208815811],[-114.10141707482919,46.828370407248826],[-114.10010954324228,46.82690548814563],[-114.09560673134018,46.8271123684554],[-114.09592544216444,46.829058122675065],[-114.09957018646286,46.82933208815811]]],"type":"Polygon"},"properties":{},"name":"Example","description":"This is an example domain.","horizontalResolution":2,"verticalResolution":1}},"feature UTM":{"summary":"Example UTM Feature","description":"This example creates a domain from a polygon feature with UTM coordinates. Because the coordinates are in UTM, the crs field must be explicitly set according to the GeoJSON specification.","value":{"type":"Feature","properties":{},"geometry":{"type":"Polygon","coordinates":[[[721202.0930596117,5190283.73496937],[721065.1931226599,5190171.675898871],[721170.9221922038,5190012.585851082],[721513.4767988612,5190048.269428906],[721481.1717487838,5190263.570731599],[721202.0930596117,5190283.73496937]]]},"crs":{"type":"name","properties":{"name":"urn:ogc:def:crs:EPSG::32611"}},"name":"Example","description":"This is an example domain.","horizontalResolution":2,"verticalResolution":1}},"feature local":{"summary":"Example Local Feature","description":"Example of a domain with spatial data in a local coordinate system (with meter units). The crs field is set to 'local' to indicate that the coordinates are in a local coordinate system.","value":{"type":"Feature","geometry":{"coordinates":[[[0,0],[0,100],[100,100],[100,0],[0,0]]],"type":"Polygon"},"properties":{},"name":"Example","description":"This is an example domain.","horizontalResolution":2,"verticalResolution":1,"crs":{"properties":{"name":"local"},"type":"name"}}}}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Domain"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}]}},"/v1/domains/{domainId}/features":{"get":{"tags":["Features"],"summary":"Get Features","description":"# Get Features Endpoint\n\nThis endpoint retrieves the features resource associated with a domain\nbelonging to the user based on the provided domain ID.\n\nA features resource is a container for the various types of feature\ndata that can exist with the spatial context of the domain. Currently,\nonly road and water features are supported, though other forms of feature\nwill be added soon.\n\n## Endpoint: `GET /v1/domains/{domainId}/features`\n\n### Path Parameters\n\nTo retrieve the features of a domain, the following path parameter is required:\n\n- **domainId**: (string) The unique identifier of the domain belonging to the user whose features are to be retrieved.\n\n### Response\n\nThe response returns the members of the specified features resource\nfollowing the Features schema.\n\n- **road**: (RoadFeature)\n- **water**: (WaterFeature)\n\n### Example Request\n\n```http\nGET /v1/domains/1e7d8d3c9f8b4c3ba9e7c3b4f8d7a9c1/features\n```\n\n### Error Responses\n\n- **404 Not Found**: The specified domain does not exist or the user does not have access to it.\n  - **Detail**: \"Domain not found.\"\n- **500 Internal Server Error**: An error occurred while retrieving the feature resources.\n  - **Detail**: \"An error occurred while getting the feature resources.\"","operationId":"get_features","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"parameters":[{"name":"domainId","in":"path","required":true,"schema":{"type":"string","title":"Domainid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Features"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/domains/{domainId}/features/road":{"post":{"tags":["Road Feature"],"summary":"Create Road Feature","description":"# Create Road Feature\n\nThis endpoint creates a new road feature resource for a specific domain.\nRoad features represent various road attributes (e.g., type, condition) within the spatial context of a domain.\nThe road feature data can be generated using various data sources (e.g., OSM) and methods.\n\nOn resource creation, the road feature data is set to a status of \"pending\".\nThe road feature data is generated in the background using the specified methods and data sources.\nOnce the road feature data is generated and available for user access, the status is updated to \"completed\".\n\n## Endpoint\n\n```\nPOST /v1/domains/{domainId}/features/road\n```\n\n## Path Parameters\n\n- `domainId` (string, required): The unique identifier of the domain for which you want to create the road feature.\n\n## Request Body\n\nThe request body should be a JSON object containing the following fields:\n\n- `sources` (array of strings, required): List of sources to include in the road feature. Currently, possible values include:\n- `\"OSM\"`: OpenStreetMap data source.\n\n## Response\n\nIf the request is successful, the endpoint will return a `201 Created` status code and the created road feature resource in the response body. The response body will be a JSON object with the following fields:\n\n- `status` (string): The status of the road feature. Will be set to `\"pending\"` initially.\n- `createdOn` (string): The timestamp when the road feature was created.\n- `modifiedOn` (string): The timestamp when the road feature was last modified.\n- `checksum` (string): A unique checksum for the road feature resource.\n- `sources` (array of strings): The list of sources used for the road feature.\n\n## Error Responses\n\n- `404 Not Found`: The specified domain does not exist or the user does not have access to it.\n- `422 Unprocessable Entity`: The road feature is not supported for local coordinate systems, or required fields are missing.\n- `429 Too Many Requests`: An error occurred while running the job due to resource exhaustion.\n\n## Usage Notes\n\n- If the domain is in a \"local\" coordinate system, the endpoint will raise a `422 Unprocessable Entity` error.\n- The endpoint will run the specified job to generate the road feature data if \"OSM\" is included in the sources.\n- The endpoint updates the road feature data in the database and logs relevant information for monitoring and debugging.","operationId":"create_road_feature","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"parameters":[{"name":"domainId","in":"path","required":true,"schema":{"type":"string","title":"Domainid"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateRoadFeatureRequest"}}}},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RoadFeature"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"get":{"tags":["Road Feature"],"summary":"Get Road Feature","description":"# Get Road Feature\n\nThis endpoint retrieves the details of an existing road feature resource\nfor a specific domain. Users can access the status and metadata of the\nroad feature that has been created.\n\n## Endpoint\n\n```\nGET /v1/domains/{domainId}/features/road\n```\n\n## Path Parameters\n\n- `domainId` (string, required): The unique identifier of the domain for which you want to retrieve the road feature.\n\n## Response\n\nIf the request is successful, the endpoint will return a `200 OK` status code and the road feature resource in the response body. The response body will be a JSON object with the following fields:\n\n- `status` (string): The status of the road feature.\n- `createdOn` (string): The timestamp when the road feature was created.\n- `modifiedOn` (string): The timestamp when the road feature was last modified.\n- `checksum` (string): A unique checksum for the road feature resource.\n- `sources` (array of strings): The list of sources used for the road feature.\n\n## Error Responses\n\n- `404 Not Found`: The specified domain does not exist or the user does not have access to it.\n- `404 Not Found`: The road feature for the specified domain does not exist or is empty.\n\n## Usage Notes\n\n- Ensure that the domain ID provided in the request path is valid and that the user has access to the specified domain.\n- If the road feature data is empty or invalid, the endpoint will raise a `404 Not Found` error with a detail message indicating the issue.","operationId":"get_road_feature","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"parameters":[{"name":"domainId","in":"path","required":true,"schema":{"type":"string","title":"Domainid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RoadFeature"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["Road Feature"],"summary":"Delete Road Feature","description":"# Delete Road Feature\n\nThis endpoint deletes an existing road feature resource for a specific\ndomain. This action removes the road feature data from the database and\ncancels any ongoing job execution related to the road feature.\n\n## Endpoint\n\n```\nDELETE /v1/domains/{domainId}/features/road\n```\n\n## Path Parameters\n\n- `domainId` (string, required): The unique identifier of the domain for which you want to delete the road feature.\n\n## Response\n\nIf the request is successful, the endpoint will return a `204 No Content` status code. This indicates that the road feature has been successfully deleted and no content is returned in the response body.\n\n## Error Responses\n\n- `404 Not Found`: The specified domain does not exist or the user does not have access to it.\n  - **Detail**: \"Domain not found\"\n\n## Usage Notes\n\n- Deleting a road feature is a permanent action and cannot be undone. Ensure that you have the correct domain ID before making the delete request.\n- The endpoint will also cancel any ongoing job execution related to the road feature and remove the associated data from the cache and cloud storage.","operationId":"delete_road_feature","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"parameters":[{"name":"domainId","in":"path","required":true,"schema":{"type":"string","title":"Domainid"}}],"responses":{"204":{"description":"Successful Response"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/domains/{domainId}/features/water":{"post":{"tags":["Water Feature"],"summary":"Create Water Feature","description":"# Create Water Feature\n\nThis endpoint creates a new water feature resource for a specific domain.\nWater feature data represents various water-related attributes (e.g.,\nlakes, rivers) that exist within the spatial context of a domain. The\nwater feature data can be sourced from different data sources (e.g., OSM)\nand can include various details about water features in the domain.\n\nOn resource creation, the water feature data is set to a status of \"pending\".\nThe data is processed in the background, and once it is available for user\naccess, the status is updated to \"completed\".\n\n## Endpoint\n\n```\nPOST /v1/domains/{domainId}/features/water\n```\n\n## Path Parameters\n\n- `domainId` (string, required): The unique identifier of the domain for\n  which you want to create the water feature.\n\n## Request Body\n\nThe request body should be a JSON object containing the following fields:\n\n- `sources` (array of strings, required): List of sources from which the\n  water feature data should be collected. Currently, `\"OSM\"` is a supported source.\n- Additional fields might be included based on the source. For example,\n  if the source is `\"OSM\"`, the request can specify additional parameters\n  related to how the data should be fetched.\n\n## Response\n\nIf the request is successful, the endpoint will return a `201 Created` status code\nand the created water feature resource in the response body. The response body will\nbe a JSON object with the following fields:\n\n- `status` (string): The status of the water feature. Initially set to `\"pending\"`.\n- `createdOn` (string): The timestamp when the water feature was created.\n- `modifiedOn` (string): The timestamp when the water feature was last modified.\n- `checksum` (string): A unique checksum for the water feature resource.\n- `sources` (array of strings): The list of sources used to gather the water feature data.\n\n## Error Responses\n\n- `422 Unprocessable Entity`: The domain is in a local coordinate system which\n  does not support water features.\n  - **Detail**: \"WaterFeature is not supported for local coordinate systems.\"\n- `429 Too Many Requests`: An error occurred while running the job for processing\n  the water feature data.\n  - **Detail**: An error message related to job submission.\n\n## Usage Notes\n\n- Ensure that the domain ID provided in the request path is valid and that the user\n  has access to the specified domain.\n- If using `\"OSM\"` as a source, additional parameters can be specified as needed.\n- The process of creating and updating the water feature data involves background\n  job execution, and the endpoint will return the initial resource with a pending status.","operationId":"create_water_feature","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"parameters":[{"name":"domainId","in":"path","required":true,"schema":{"type":"string","title":"Domainid"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateWaterFeatureRequest"}}}},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WaterFeature"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"get":{"tags":["Water Feature"],"summary":"Get Water Feature","description":"# Get Water Feature\n\nThis endpoint retrieves the details of an existing water feature resource\nfor a specific domain. The water feature data represents various water-related\nattributes (e.g., lakes, rivers) that have been created and stored for the\ngiven domain.\n\n## Endpoint\n\n```\nGET /v1/domains/{domainId}/features/water\n```\n\n## Path Parameters\n\n- `domainId` (string, required): The unique identifier of the domain for\n  which you want to retrieve the water feature.\n\n## Response\n\nIf the request is successful, the endpoint will return a `200 OK` status code\nand the water feature resource in the response body. The response body will\nbe a JSON object with the following fields:\n\n- `status` (string): The status of the water feature.\n- `createdOn` (string): The timestamp when the water feature was created.\n- `modifiedOn` (string): The timestamp when the water feature was last modified.\n- `checksum` (string): A unique checksum for the water feature resource.\n- `sources` (array of strings): The list of sources used to gather the water feature data.\n\n## Error Responses\n\n- `404 Not Found`: The specified domain does not exist or the user does not have access to it.\n- `404 Not Found`: The water feature for the specified domain does not exist or is empty.\n  - **Detail**: \"water feature empty.\"\n\n## Usage Notes\n\n- Ensure that the domain ID provided in the request path is valid and that the user\n  has access to the specified domain.\n- If the water feature data does not exist or is empty, a `404 Not Found` error will be raised.","operationId":"get_water_feature","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"parameters":[{"name":"domainId","in":"path","required":true,"schema":{"type":"string","title":"Domainid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WaterFeature"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["Water Feature"],"summary":"Delete Water Feature","description":"# Delete Water Feature\n\nThis endpoint deletes an existing water feature resource for a specific domain.\nThis action removes the water feature data from the database and cancels any ongoing\njob execution related to the water feature.\n\n## Endpoint\n\n```\nDELETE /v1/domains/{domainId}/features/water\n```\n\n## Path Parameters\n\n- `domainId` (string, required): The unique identifier of the domain for which you want to delete the water feature.\n\n## Response\n\nIf the request is successful, the endpoint will return a `204 No Content` status code.\nThis indicates that the water feature has been successfully deleted and no content is returned\nin the response body.\n\n## Error Responses\n\n- `404 Not Found`: The specified domain does not exist or the user does not have access to it.\n - **Detail**: \"Domain not found\"\n- `404 Not Found`: The water feature for the specified domain does not exist.\n - **Detail**: \"Water feature not found\"\n\n## Usage Notes\n\n- Deleting a water feature is a permanent action and cannot be undone. Ensure that you have\n the correct domain ID before making the delete request.\n- The endpoint will also cancel any ongoing job execution related to the water feature and\n remove the associated data from the cache and cloud storage.","operationId":"delete_water_feature","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"parameters":[{"name":"domainId","in":"path","required":true,"schema":{"type":"string","title":"Domainid"}}],"responses":{"204":{"description":"Successful Response"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/domains/{domainId}/inventories":{"get":{"tags":["Inventories"],"summary":"Get Inventories","description":"# Get Inventories Endpoint\n\nThis endpoint retrieves the inventories resource associated with a domain\nbelonging to the user based on the provided domain ID.\n\nAn inventories resource is a container for the various types of inventory\ndata that can exist with the spatial context of the domain. Currently,\nonly tree inventories are supported, though other forms of inventory will\nbe added soon.\n\n## Endpoint: `GET /v1/domains/{domainId}/inventories`\n\n### Path Parameters\n\nTo retrieve the inventories of a domain, the following path parameter is required:\n\n- **domainId**: (string) The unique identifier of the domain belonging to the user whose inventories are to be retrieved.\n\n### Response\n\nThe response returns the members of the specified inventories resource\nfollowing the Inventories schema.\n\n- **tree**: (TreeInventory)\n\n\n### Example Request\n\n```http\nGET /v1/domains/1e7d8d3c9f8b4c3ba9e7c3b4f8d7a9c1/inventories\n```\n\n### Error Responses\n\n- **404 Not Found**: The specified domain does not exist or the user does not have access to it.\n  - **Detail**: \"Domain not found.\"\n- **500 Internal Server Error**: An error occurred while retrieving the inventory resources.\n  - **Detail**: \"An error occurred while getting the inventory resources.\"","operationId":"get_inventories","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"parameters":[{"name":"domainId","in":"path","required":true,"schema":{"type":"string","title":"Domainid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Inventories"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/domains/{domainId}/inventories/tree":{"post":{"tags":["Tree Inventory"],"summary":"Create Tree Inventory","description":"# Create Tree Inventory\n\nThis endpoint creates a new tree inventory resource for a specific domain. Tree Inventory data represents a complete forest inventory that exists within the spatial context of a domain. The tree inventory data can be generated using various data products and models that provide either national coverage (e.g., TreeMap) or local coverage.\n\nOn resource creation, the tree inventory data is set to a status of \"pending\". The tree inventory data is generated in the background using the specified method (e.g., TreeMap). Once the tree inventory data is generated and available for user access, the status is updated to \"completed\".\n\n## Endpoint\n\n```\nPOST /v1/domains/{domainId}/inventories/tree\n```\n\n## Path Parameters\n\n- `domainId` (string, required): The unique identifier of the domain for\n  which you want to create the tree inventory.\n\n## Request Body\n\nThe request body should be a JSON object containing the following fields:\n\n- `sources` (array of strings, required): List of data sources to be used for building the tree inventory. Currently, only one data source at a time is supported. Possible values are:\n  - `\"TreeMap\"`: Indicates that the tree inventory should be created using the TreeMap raster product. This approach generates a tree inventory with national coverage.\n\n- `modifications` (array of objects, optional): List of modifications to apply to the tree inventory data. Maximum 1000 modifications allowed.\n\n- `treatments` (array of objects, optional): List of silvicultural treatments to apply to the tree inventory. Maximum 1000 treatments allowed.\n\n- `featureMasks` (array of strings, optional): List of Features to mask tree inventory data.\n\n### TreeMap Source Configuration\n\nIf `\"TreeMap\"` is included in the `sources`, the request body can include additional configurations for `TreeMap`:\n\n- `TreeMap` (object, optional): Advanced configurations for the TreeMap data source.\n  - `version` (string, optional): The version of TreeMap to use. Default is `\"2016\"`. Possible values are:\n    - `\"2014\"`: Use the 2014 version of TreeMap.\n    - `\"2016\"`: Use the 2016 version of TreeMap.\n  - `seed` (integer, optional): The random seed to use for generating the tree inventory. If not provided, a random seed will be generated.\n\n### Treatments\n\nThe `treatments` field is an array of treatment objects. Each treatment object represents a silvicultural treatment to be applied to the tree inventory. Currently, there are two types of treatment types available:\n\n1. Proportional Thinning\n2. Directional Thinning\n\n#### Proportional Thinning\n\n- `method`: \"proportionalThinning\" (string, required)\n- `targetMetric`: \"basalArea\" (string, required)\n- `targetValue`: float (required)\n  - Unit: square meters per hectare (m²/ha)\n  - Represents the target basal area after thinning\n\n#### Directional Thinning\n\n- `method`: \"directionalThinning\" (string, required)\n- `direction`: (string, required)\n  - Possible values: \"below\" or \"above\"\n  - Indicates whether to thin from below (smallest to largest) or above (largest to smallest)\n- `targetMetric`: (string, required)\n  - Possible values: \"diameter\" or \"basalArea\"\n- `targetValue`: float (required)\n  - Units of the targetValue quantity depends on the targetMetric:\n    - For \"diameter\": centimeters (cm)\n    - For \"basalArea\": square meters per hectare (m²/ha)\n  - Represents the threshold for thinning (diameter) or the target basal area after thinning\n\nNote: The order of treatments in the array determines the sequence in which they will be applied to the tree inventory.\n\n## Response\n\nIf the request is successful, the endpoint will return a `201 Created` status code and the created tree inventory resource in the response body. The response body will be a JSON object with the following fields:\n\n- `status` (string): The status of the tree inventory. Will be set to `\"pending\"` initially.\n- `createdOn` (string): The timestamp when the tree inventory was created.\n- `modifiedOn` (string): The timestamp when the tree inventory was last modified.\n- `checksum` (string): A unique checksum for the tree inventory resource.\n\n## Error Responses\n\n- `404 Not Found`: The specified domain does not exist or the user does not have access to it.\n- `422 Unprocessable Entity`: The request body is invalid or missing required fields.\n- `429 Too Many Requests`: An error occurred while submitting the job due to resource exhaustion.","operationId":"create_tree_inventory","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"parameters":[{"name":"domainId","in":"path","required":true,"schema":{"type":"string","title":"Domainid"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateTreeInventoryRequest"},"examples":{"treemap_defaults":{"value":{"sources":["TreeMap"]},"summary":"TreeMap example with defaults","description":"This example creates a tree inventory using data from the TreeMap raster product. In this example, the user only provides 'TreeMap' as an element in the 'sources' list. The 'TreeMap' source is then populated with default values for the 'version' and 'seed' fields."},"treemap_advanced":{"value":{"sources":["TreeMap"],"TreeMap":{"version":"2014","seed":123456789}},"summary":"TreeMap example with advanced options","description":"This example creates a tree inventory using data from the TreeMap raster product. In this example, the user provides 'TreeMap' as an element in the 'sources' list. The 'TreeMap' source is then populated with the specified 'version' and 'seed' values."},"treemap_with_feature_masks":{"value":{"sources":["TreeMap"],"featureMasks":["road","water"]},"summary":"TreeMap example with feature masks","description":"This example creates a tree inventory using data from the TreeMap raster product. In this example, the user provides 'TreeMap' as an element in the 'sources' list. The 'TreeMap' source is then populated with default values for the 'version' and 'seed' fields. The 'featureMasks' list is also provided with 'road' and 'water' elements to mask out these features from the inventory."},"treemap_ht_modification":{"value":{"sources":["TreeMap"],"modifications":[{"conditions":{"attribute":"HT","operator":"gt","value":20},"actions":{"attribute":"HT","modifier":"multiply","value":0.9}}]},"summary":"TreeMap height modification example","description":"This example creates a tree inventory using data from the TreeMap raster product. It applies a modification to reduce the height of all trees taller than 20 meters by 10%."},"treemap_dia_modification":{"value":{"sources":["TreeMap"],"modifications":[{"conditions":{"attribute":"DIA","operator":"lt","value":20.32},"actions":{"attribute":"all","modifier":"remove"}}]},"summary":"TreeMap remove trees modification example","description":"This example creates a tree inventory using data from the TreeMap raster product. It applies a modification to remove all trees with a diameter at breast height less than 20.32cm (8 inches)."},"treemap_proportional_thinning":{"value":{"sources":["TreeMap"],"treatments":[{"method":"proportionalThinning","targetMetric":"basalArea","targetValue":25}]},"summary":"TreeMap proportional thinning example","description":"This example creates a tree inventory using data from the TreeMap raster product. It applies a silvicultural treatment to thin the forest to 25 square meters of basal area per hectare."},"treemap_directional_thinning":{"value":{"sources":["TreeMap"],"treatments":[{"method":"directionalThinning","direction":"below","targetMetric":"diameter","targetValue":30.48}]},"summary":"TreeMap directional thinning example","description":"This example creates a tree inventory using data from the TreeMap raster product. It applies a silvicultural treatment to remove from below all trees with a diameter at breast height less than 30.48cm (12 inches)."}}}}},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TreeInventory"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"get":{"tags":["Tree Inventory"],"summary":"Get Tree Inventory","description":"# Get Tree Inventory\n\nThis endpoint retrieves the details of an existing tree inventory\nresource for a specific domain. Users can access the status and metadata\nof the tree inventory that has been created.\n\n## Endpoint\n\n```\nGET /v1/domains/{domainId}/inventories/tree\n```\n\n### Path Parameters\n\n- `domainId` (string, required): The unique identifier of the domain for which you want to retrieve the tree inventory.\n\n### Response\n\nIf the request is successful, the endpoint will return a `200 OK` status code and the tree inventory resource in the response body. The response body will be a JSON object with the following fields:\n\n- `status` (string): The status of the tree inventory. Possible values are \"pending\", \"processing\", \"completed\", and \"failed\".\n- `createdOn` (string): The timestamp when the tree inventory was created.\n- `modifiedOn` (string): The timestamp when the tree inventory was last modified.\n- `checksum` (string): A unique checksum for the tree inventory resource.\n- `treeInventory` (object): The tree inventory data, as provided in the request body when the tree inventory was created.\n\n### Error Responses\n\n- `404 Not Found`: The specified domain does not exist or the user does not have access to it.\n  - **Detail**: \"Domain not found\"\n- `404 Not Found`: The tree inventory for the specified domain does not exist.\n  - **Detail**: \"Tree inventory not created\"","operationId":"get_tree_inventory","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"parameters":[{"name":"domainId","in":"path","required":true,"schema":{"type":"string","title":"Domainid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TreeInventory"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["Tree Inventory"],"summary":"Delete Tree Inventory","description":"# Delete Tree Inventory\n\nThis endpoint deletes an existing tree inventory resource for a specific\ndomain. This action removes the tree inventory data from the database and\ncancels any ongoing job execution related to the tree inventory.\n\n## Endpoint\n\n```\nDELETE /v1/domains/{domainId}/inventories/tree\n```\n\n### Path Parameters\n\n- `domainId` (string, required): The unique identifier of the domain for which you want to delete the tree inventory.\n\n### Response\n\nIf the request is successful, the endpoint will return a `204 No Content` status code. This indicates that the tree inventory has been successfully deleted and no content is returned in the response body.\n\n### Error Responses\n\n- `404 Not Found`: The specified domain does not exist or the user does not have access to it.\n  - **Detail**: \"Domain not found\"\n\n### Usage Notes\n\n- Deleting a tree inventory is a permanent action and cannot be undone. Ensure that you have the correct domain ID before making the delete request.\n- The endpoint will also cancel any ongoing job execution related to the tree inventory and remove the associated data from the cache and cloud storage.","operationId":"delete_tree_inventory","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"parameters":[{"name":"domainId","in":"path","required":true,"schema":{"type":"string","title":"Domainid"}}],"responses":{"204":{"description":"Successful Response"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/domains/{domainId}/inventories/tree/exports/{exportFormat}":{"post":{"tags":["Tree Inventory"],"summary":"Create Tree Inventory Export","description":"# Create Tree Inventory Export\n\n## Endpoint\n\n```\nPOST /v1/domains/{domainId}/inventories/tree/exports/{exportFormat}\n```\n\n## Description\n\nThis endpoint initiates the creation of an export file for the tree inventory data of a specific domain. The data can be exported in various formats including CSV, Parquet, and GeoJSON. The export process runs in the background.\n\n## Path Parameters\n\n- `domainId` (string, required): The unique identifier of the domain for which you want to create the tree inventory export.\n- `exportFormat` (string, required): The format in which to export the tree inventory data. Possible values are:\n  - `\"csv\"`: Export the data in CSV format.\n  - `\"parquet\"`: Export the data in Parquet format.\n  - `\"geojson\"`: Export the data in GeoJSON format.\n\n## Response\n\nIf the request is successful, the endpoint will return a `201 Created` status code and the export request details in the response body. The response body will be a JSON object with the following fields:\n\n- `status` (string): The status of the export request. Will be set to `\"pending\"` initially.\n- `createdOn` (string): The timestamp when the export request was created.\n- `modifiedOn` (string): The timestamp when the export request was last modified.\n- `expiresOn` (string): The timestamp when the export request will expire (7 days from creation).\n- `signedUrl` (string, optional): The signed URL to download the exported file. This field will be `null` initially.\n\n## Error Responses\n\n- `404 Not Found`: The specified domain does not exist or the user does not have access to it.\n- `422 Unprocessable Entity`: The export format is invalid or the request cannot be processed.\n\n## Usage Notes\n\n- Ensure that the tree inventory for the specified domain is completed before initiating an export.\n- The export request will be processed in the background. Use the GET endpoint to check the status.","operationId":"create_tree_inventory_export","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"parameters":[{"name":"domainId","in":"path","required":true,"schema":{"type":"string","title":"Domainid"}},{"name":"exportFormat","in":"path","required":true,"schema":{"enum":["csv","parquet","geojson"],"type":"string","title":"Exportformat"}}],"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Export"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"get":{"tags":["Tree Inventory"],"summary":"Get Tree Inventory Export","description":"# Get Tree Inventory Export\n\n## Endpoint\n\n```\nGET /v1/domains/{domainId}/inventories/tree/exports/{exportFormat}\n```\n\n## Description\n\nThis endpoint retrieves the details of a tree inventory export request for a specific domain. Users can check the status, metadata, and download URL of the export request.\n\n## Path Parameters\n\n- `domainId` (string, required): The unique identifier of the domain for which you want to retrieve the tree inventory export.\n- `exportFormat` (string, required): The format of the export request. Possible values are:\n  - `\"csv\"`: Retrieve the CSV export request details.\n  - `\"parquet\"`: Retrieve the Parquet export request details.\n  - `\"geojson\"`: Retrieve the GeoJSON export request details.\n\n## Response\n\nIf the request is successful, the endpoint will return a `200 OK` status code and the export request details in the response body. The response body will be a JSON object with the following fields:\n\n- `status` (string): The status of the export request. Possible values are `\"pending\"`, `\"processing\"`, `\"completed\"`, `\"failed\"`, and `\"expired\"`.\n- `createdOn` (string): The timestamp when the export request was created.\n- `modifiedOn` (string): The timestamp when the export request was last modified.\n- `expiresOn` (string): The timestamp when the export request will expire.\n- `signedUrl` (string, optional): The signed URL to download the exported file. This will be `null` if the status is not `\"completed\"`.\n\n## Error Responses\n\n- `404 Not Found`: The specified domain does not exist or the user does not have access to it.\n- `404 Not Found`: The specified export request does not exist.\n\n## Usage Notes\n\n- Once the export is completed, the `status` will change to `\"completed\"`, and the `signedUrl` field will be populated with a URL to download the export file.\n- The signed URL will be valid for 7 days from the creation of the export request, as indicated by the `expiresOn` field.\n- To download the exported file, make a GET request to the provided `signedUrl` once it's available.\n- If the current time is past the `expiresOn` timestamp, the `status` will change to `\"expired\"`, and the `signedUrl` will be set to `null`.\n- There is no separate download endpoint. Use the `signedUrl` provided in the export details to download the file directly.\n\n## Example Workflow\n\n1. Create an export request using the POST endpoint.\n2. Periodically check the status of the export using the GET endpoint.\n3. Once the status is `\"completed\"`, retrieve the `signedUrl` from the export details.\n4. Use the `signedUrl` to download the exported file within 7 days of the export creation.","operationId":"get_tree_inventory_export","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"parameters":[{"name":"domainId","in":"path","required":true,"schema":{"type":"string","title":"Domainid"}},{"name":"exportFormat","in":"path","required":true,"schema":{"enum":["csv","geojson","parquet"],"type":"string","title":"Exportformat"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Export"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/domains/{domainId}/grids":{"get":{"tags":["Grids"],"summary":"Get Grids","description":"# Get Grids Endpoint\n\nThis endpoint retrieves the grids resource associated with a domain\nbelonging to the user based on the provided domain ID.\n\nA grids resource is a container for the various types of gridded\ndata that can exist with the spatial context of the domain. Currently,\ntree, surface, topography, and feature grids are supported.\n\n## Endpoint: `GET /v1/domains/{domainId}/grids`\n\n### Path Parameters\n\nTo retrieve the grids of a domain, the following path parameter is required:\n\n- **domainId**: (string) The unique identifier of a domain belonging to the user.\n### Response\n\nThe response returns the members of the specified grids resource following\nthe Grids schema.\n\n- **tree**: (TreeGrid)\n- **surface**: (SurfaceGrid)\n- **topography**: (TopographyGrid)\n- **feature**: (FeatureGrid)\n\n### Example Request\n\n```http\nGET /v1/domains/1e7d8d3c9f8b4c3ba9e7c3b4f8d7a9c1/grids\n```\n\n### Error Responses\n\n- **404 Not Found**: The specified domain does not exist or the user does not have access to it.\n  - **Detail**: \"Domain not found.\"\n- **500 Internal Server Error**: An error occurred while retrieving the grid resources.\n  - **Detail**: \"An error occurred while getting the grid resources.\"","operationId":"get_grids","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"parameters":[{"name":"domainId","in":"path","required":true,"schema":{"type":"string","title":"Domainid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Grids"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/domains/{domainId}/grids/exports/{exportFormat}":{"post":{"tags":["Grids"],"summary":"Create Grid Export","description":"# Create Grid Export\n\n## Endpoint\n\n```\nPOST /v1/domains/{domainId}/grids/exports/{exportFormat}\n```\n\n## Description\n\nThis endpoint initiates the creation of an export file for the grid data of a specific domain to the specified format.\n\n## Path Parameters\n\n- `domainId` (string, required): The unique identifier of the domain.\n- `exportFormat` (string, required): The format in which to export the grid data. Possible values are:\n  - `\"zarr\"`: Export the data in the compressed zarr format.\n  - `\"QUIC-Fire\"`: Exports the grid data to the set of input files required by the QUIC-Fire model.\n\n### QUIC-Fire Format\n\nFastFuels supports grid exports directly to input files for the QUIC-Fire\nmodel. The export format is a zip file containing the following files:\n- treesrhof.dat\n- treesmoist.dat\n- treesdepth.dat\n- topo.dat\n\nThe exporter attempts to build the required files from the available grid data.\n\nThe following examples demonstrate some of the possible behavior:\n- If a \"topography\" grid is not available, the exporter will not include topo.dat in the export.\n- If the \"surface\" grid is present, but the \"tree\" grid is not, the exporter will include treesrhof.dat, treesmoist.dat, and treesdepth.dat in the export as a 2D input.\n- If the \"tree\" grid is present, but the \"surface\" grid is not, the exporter will include treesrhof.dat, treesmoist.dat, and treesdepth.dat in the export as a 3D input.\n- If both the \"surface\" and \"tree\" grids are present, the exporter will include treesrhof.dat, treesmoist.dat, and treesdepth.dat in the export as a 3D input with the surface grid as the bottom layer with respect to the z-axis.\n\n## Response\n\nIf successful, returns a `201 Created` status code and a JSON object with:\n\n- `status` (string): Initially set to `\"pending\"`.\n- `createdOn` (string): Timestamp of export request creation.\n- `modifiedOn` (string): Timestamp of last modification.\n- `expiresOn` (string): Expiration timestamp (7 days from creation).\n- `signedUrl` (string, optional): Initially `null`, populated when export is completed.\n\n## Error Responses\n\n- `404 Not Found`: Domain not found or user lacks access.\n- `422 Unprocessable Entity`: Invalid export format or request.\n- `429 Too Many Requests`: Error submitting the export job due to resource exhaustion.\n\n## Usage Notes\n\n- Ensure the grid data for the domain are completed before initiating an export.\n- Check the export status using the GET endpoint.\n- Use the `signedUrl` to download the file once available.","operationId":"create_grid_export","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"parameters":[{"name":"domainId","in":"path","required":true,"schema":{"type":"string","title":"Domainid"}},{"name":"exportFormat","in":"path","required":true,"schema":{"enum":["zarr","QUICFire"],"type":"string","title":"Exportformat"}}],"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Export"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"get":{"tags":["Grids"],"summary":"Get Grid Export","description":"# Get Grid Export\n\n## Endpoint\n\n```\nGET /v1/domains/{domainId}/grids/exports/{exportFormat}\n```\n\n## Description\n\nThis endpoint retrieves the details of a grid export request for a specific domain.\n\n## Path Parameters\n\n- `domainId` (string, required): The unique identifier of the domain.\n- `exportFormat` (string, required): The format of the export. Possible values are:\n    - `\"zarr\"`: Export the data in the compressed zarr format.\n    - `\"QUICFire\"`: Exports the grid data to the set of input files required by the QUIC-Fire model.\n\n## Response\n\nIf successful, returns a `200 OK` status code and a JSON object with:\n\n- `status` (string): Current status of the export (`\"pending\"`, `\"processing\"`, `\"completed\"`, `\"failed\"`, or `\"expired\"`).\n- `createdOn` (string): Timestamp of export request creation.\n- `modifiedOn` (string): Timestamp of last modification.\n- `expiresOn` (string): Expiration timestamp.\n- `signedUrl` (string, optional): URL to download the exported file, if status is `\"completed\"`.\n\n## Error Responses\n\n- `404 Not Found`: Domain or export request not found.\n\n## Usage Notes\n\n- Use this endpoint to check the status of an export request.\n- When status is `\"completed\"`, use the `signedUrl` to download the file.\n- The signed URL expires 7 days after creation.","operationId":"get_grid_export","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"parameters":[{"name":"domainId","in":"path","required":true,"schema":{"type":"string","title":"Domainid"}},{"name":"exportFormat","in":"path","required":true,"schema":{"enum":["zarr","QUICFire"],"type":"string","title":"Exportformat"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Export"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/domains/{domainId}/grids/tree":{"post":{"tags":["Tree Grid"],"summary":"Create Tree Grid","description":"# Create Tree Grid\n\nThis endpoint creates a new tree grid resource for a specific domain.\nTree grid data represents various 3D gridded tree attribute (e.g.,\nbulk density, fuel moisture, SPCD) data that exists within the spatial\ncontext of a domain. Tree grid data is typically generated to create\ninputs to 3D fire behavior models such as QUIC-Fire or FDS.\n\nOn resource creation, the tree grid data is set to a status of \"pending\".\nThe tree grid data is generated in the background using the specified\nmethod and data sources. Once the tree grid data is generated and\navailable for user access, the status is updated to \"completed\".\n\n## Endpoint\n\n```\nPOST /v1/domains/{domainId}/grids/tree\n```\n\n## Path Parameters\n\n- `domainId` (string, required): The unique identifier of the domain for\n  which you want to create the tree grid.\n\n## Request Body\n\nThe request body should be a JSON object containing the following fields:\n\n- `attributes` (array of strings, required): List of attributes to include in the tree grid data. Attributes represent the an additional dimension in the 3D gridded data. Possible values are:\n  - `\"bulkDensity\"`\n  - `\"fuelMoisture\"`\n  - `\"SPCD\"`\n\n### Attribute Descriptions and Sources\n\n- `bulkDensity` (kg/m³): The mass of the tree fuel per unit volume of the occupied cell.\n- `foliarMoisture` (%): Live foliar moisture content of the occupied cell.\n- `SPCD` (unitless): The FIA species code of the occupied cell.\n\nEach attribute can be sourced from different data sources. By default, the system will use pre-defined data sources to acquire data for the specified attributes. However, if you want to specify additional information for how to acquire an attribute, you can provide detailed instructions in the request body.\n\nTo specify additional information for an attribute, add a field with the attribute name to the request body. For example:\n\n```json\n{\n    \"attributes\": [\"bulkDensity\", \"fuelMoisture\"],\n    \"bulkDensity\": {\n        \"source\": \"TreeInventory\",\n        \"biomassModel\": \"NSVB\"\n    },\n    \"fuelMoisture\": {\"source\": \"uniform\", \"value\": 175}\n}\n```\n\nIn this example, the `bulkDensity` attribute is sourced from the Tree Inventory using the NSVB biomass model, and the `fuelMoisture` attribute is set to a uniform value of 175%.\n\nThe general form of this construction is as follows:\n\n- `bulkDensity`, `fuelMoisture`, `SPCD` (object, optional): The data source for the respective attribute. The structure of these objects depends on the source specified.\n\n#### Uniform Source\n\nIf the source is `\"uniform\"`, the object should have the following fields:\n\n- `value` (float, required): The uniform value for the attribute.\n\n#### Tree Inventory Source\n\nIf the source is `\"TreeInventory\"`, and the attribute `\"bulkDensity\"`, then we need to estimate a biomass. The biomass allometry model used is specified with the following field:\n\n- `biomassModel` (string, required for bulkDensity): The biomass model to use. Possible values are:\n  - `\"Jenkins\"`\n  - `\"NSVB\"` (default)\n\nNote: The `biomassModel` field only applies to the `bulkDensity` attribute and is not used for other attributes such as `SPCD`.\n\n## Response\n\nIf the request is successful, the endpoint will return a `201 Created` status code and the created tree grid resource in the response body. The response body will be a JSON object with the following fields:\n\n- `status` (string): The status of the tree grid. Will be set to `\"pending\"` initially.\n- `createdOn` (string): The timestamp when the tree grid was created.\n- `modifiedOn` (string): The timestamp when the tree grid was last modified.\n- `checksum` (string): A unique checksum for the tree grid resource.\n- `attributes` (array of strings): The list of attributes included in the tree grid.\n- `bulkDensity`, `fuelMoisture`, `SPCD` (object): The data source information for the respective attribute.\n\n## Error Responses\n\n- `404 Not Found`: The specified domain does not exist or the user does not have access to it.\n- `404 Not Found`: The tree inventory for the specified domain does not exist.\n- `400 Bad Request`: The tree inventory status is not \"completed\".\n- `422 Unprocessable Entity`: The request body is invalid or required fields are missing.","operationId":"create_tree_grid","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"parameters":[{"name":"domainId","in":"path","required":true,"schema":{"type":"string","title":"Domainid"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateTreeGridRequest"},"examples":{"default_attributes":{"summary":"Default attributes example","value":{"attributes":["bulkDensity","fuelMoisture"]},"description":"This example creates a tree grid with the default attributes. Default configurations and data sources are used for each provided attribute."},"defaults_with_attributes":{"summary":"Default attributes with explicit fields example","value":{"attributes":["bulkDensity","fuelMoisture"],"bulkDensity":{"source":"TreeInventory"},"fuelMoisture":{"source":"uniform","value":100}},"description":"This example creates a tree grid with the default attributes. Default configurations and data sources are provided for each attribute. These additional fields are equivalent to the default values. Providing them explicitly is optional."},"uniform_fuel_moisture":{"summary":"Uniform fuel moisture example","value":{"attributes":["fuelMoisture"],"fuelMoisture":{"source":"uniform","value":175}},"description":"This example creates a tree grid with a uniform fuel moisture value of 175%."}}}}},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TreeGrid"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"get":{"tags":["Tree Grid"],"summary":"Get Tree Grid","description":"# Get Tree Grid\n\nThis endpoint retrieves the details of an existing tree grid resource\nfor a specific domain. Users can access the status and metadata of the\ntree grid that has been created.\n\n## Endpoint\n\n```\nGET /v1/domains/{domainId}/grids/tree\n```\n\n## Path Parameters\n\n- `domainId` (string, required): The unique identifier of the domain for\n  which you want to retrieve the tree grid.\n\n## Response\n\nIf the request is successful, the endpoint will return a `200 OK` status code and the tree grid resource in the response body. The response body will be a JSON object with the following fields:\n\n- `status` (string): The status of the tree grid.\n- `createdOn` (string): The timestamp when the tree grid was created.\n- `modifiedOn` (string): The timestamp when the tree grid was last modified.\n- `checksum` (string): A unique checksum for the tree grid resource.\n- `attributes` (array of strings): The list of attributes included in the tree grid.\n- `bulkDensity`, `fuelMoisture`, `SPCD` (object): The data source information for the respective attribute.\n\n## Error Responses\n\n- `404 Not Found`: The specified domain does not exist or the user does not have access to it.\n- `404 Not Found`: The tree grid for the specified domain does not exist.","operationId":"get_tree_grid","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"parameters":[{"name":"domainId","in":"path","required":true,"schema":{"type":"string","title":"Domainid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TreeGrid"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["Tree Grid"],"summary":"Delete Tree Grid","description":"# Delete Tree Grid\n\nThis endpoint deletes an existing tree grid resource for a specific\ndomain. This action removes the tree grid data from the database and\ncancels any ongoing job execution related to the tree grid.\n\n## Endpoint\n\n```\nDELETE /v1/domains/{domainId}/grids/tree\n```\n\n## Path Parameters\n\n- `domainId` (string, required): The unique identifier of the domain for which you want to delete the tree grid.\n\n## Response\n\nIf the request is successful, the endpoint will return a `204 No Content` status code. This indicates that the tree grid has been successfully deleted and no content is returned in the response body.\n\n## Error Responses\n\n- `404 Not Found`: The specified domain does not exist or the user does not have access to it.\n- `404 Not Found`: The tree grid for the specified domain does not exist.\n\n## Usage Notes\n\n- Deleting a tree grid is a permanent action and cannot be undone. Ensure that you have the correct domain ID before making the delete request.\n- The endpoint will also cancel any ongoing job execution related to the tree grid and remove the associated data from the cache and cloud storage.","operationId":"delete_tree_grid","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"parameters":[{"name":"domainId","in":"path","required":true,"schema":{"type":"string","title":"Domainid"}}],"responses":{"204":{"description":"Successful Response"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/domains/{domainId}/grids/tree/attribute":{"get":{"tags":["Tree Grid"],"summary":"Get Tree Grid Attribute Metadata","description":"# Get Tree Grid Attribute Metadata\n\nRetrieves metadata about the structure of the tree grid and its attributes for a given domain.\n\n## Endpoint\n\n```\nGET /v1/domains/{domainId}/grids/tree/attributes\n```\n\n## Path Parameters\n\n- `domainId` (string, required): Unique identifier of the domain.\n\n## Response\n\n### Success Response (200 OK)\n\nReturns a JSON response containing:\n\n- `shape`: Dimensions of the grid data.\n- `dimensions`: Names of each dimension.\n- `chunks`: Number of chunks in each dimension.\n- `chunkShape`: Shape of each chunk.\n- `attributes`: Detailed information about each available attribute.\n\n### Error Responses\n\n- 404 Not Found: Tree grid not found or not accessible.\n- 422 Unprocessable Entity: Tree grid not in 'completed' status.","operationId":"Get Tree Grid Attribute Metadata","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"parameters":[{"name":"domainId","in":"path","required":true,"schema":{"type":"string","title":"Domainid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GridAttributeMetadataResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/domains/{domainId}/grids/tree/exports/{exportFormat}":{"post":{"tags":["Tree Grid"],"summary":"Create Tree Grid Export","description":"# Create Tree Grid Export\n\n## Endpoint\n\n```\nPOST /v1/domains/{domainId}/grids/tree/exports/{exportFormat}\n```\n\n## Description\n\nThis endpoint initiates the creation of an export file for the tree grid data of a specific domain in the zarr compressed format. The export process runs in the background.\n\n## Path Parameters\n\n- `domainId` (string, required): The unique identifier of the domain.\n- `exportFormat` (string, required): The format for the export. Currently, only `\"zarr\"` is supported.\n\n## Response\n\nIf successful, returns a `201 Created` status code and a JSON object with:\n\n- `status` (string): Initially set to `\"pending\"`.\n- `createdOn` (string): Timestamp of export request creation.\n- `modifiedOn` (string): Timestamp of last modification.\n- `expiresOn` (string): Expiration timestamp (7 days from creation).\n\n## Error Responses\n\n- `404 Not Found`: Domain not found or user lacks access.\n- `422 Unprocessable Entity`: Invalid export format or request.\n- `429 Too Many Requests`: Error submitting the export job due to resource exhaustion.\n\n## Usage Notes\n\n- Ensure the tree grid for the domain is completed before initiating an export.\n- Check the export status using the GET endpoint.","operationId":"create_tree_grid_export","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"parameters":[{"name":"domainId","in":"path","required":true,"schema":{"type":"string","title":"Domainid"}},{"name":"exportFormat","in":"path","required":true,"schema":{"enum":["zarr"],"const":"zarr","type":"string","title":"Exportformat"}}],"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Export"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"get":{"tags":["Tree Grid"],"summary":"Get Tree Grid Export","description":"# Get Tree Grid Export\n\n## Endpoint\n\n```\nGET /v1/domains/{domainId}/grids/tree/exports/{exportFormat}\n```\n\n## Description\n\nThis endpoint retrieves the details of a tree grid export request for a specific domain.\n\n## Path Parameters\n\n- `domainId` (string, required): The unique identifier of the domain.\n- `exportFormat` (string, required): The format of the export. Currently, only `\"zarr\"` is supported.\n\n## Response\n\nIf successful, returns a `200 OK` status code and a JSON object with:\n\n- `status` (string): Current status of the export (`\"pending\"`, `\"processing\"`, `\"completed\"`, `\"failed\"`, or `\"expired\"`).\n- `createdOn` (string): Timestamp of export request creation.\n- `modifiedOn` (string): Timestamp of last modification.\n- `expiresOn` (string): Expiration timestamp.\n- `signedUrl` (string, optional): URL to download the exported file, if status is `\"completed\"`.\n\n## Error Responses\n\n- `404 Not Found`: Domain or export request not found.\n\n## Usage Notes\n\n- Use this endpoint to check the status of an export request.\n- When status is `\"completed\"`, use the `signedUrl` to download the file.\n- The signed URL expires 7 days after creation.","operationId":"get_tree_grid_export","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"parameters":[{"name":"domainId","in":"path","required":true,"schema":{"type":"string","title":"Domainid"}},{"name":"exportFormat","in":"path","required":true,"schema":{"enum":["zarr"],"const":"zarr","type":"string","title":"Exportformat"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Export"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/domains/{domainId}/grids/surface":{"post":{"tags":["Surface Grid"],"summary":"Create Surface Grid","description":"# Create Surface Grid\n\nThis endpoint creates a new surface grid resource for a specific domain.\nSurface grid data represents various surface attributes (e.g., fuel load,\nfuel height, fuel moisture) that exist within the spatial context of a domain.\nThe surface grid data can be generated using a variety of data sources\n(e.g., LANDFIRE, uniform values) and interpolation methods.\n\nOn resource creation, the surface grid data is set to a status of \"pending\".\nThe surface grid data is generated in the background using the specified\nmethod and data sources. Once the surface grid data is generated and\navailable for user access, the status is updated to \"completed\".\n\n## Endpoint\n\n```\nPOST /v1/domains/{domainId}/grids/surface\n```\n\n## Path Parameters\n\n- `domainId` (string, required): The unique identifier of the domain for\n  which you want to create the surface grid.\n\n## Request Body\n\nThe request body should be a JSON object containing the following fields:\n\n- `attributes` (array of strings, required): List of attributes to include in the surface grid. Possible values are:\n  - `\"fuelLoad\"`\n  - `\"fuelDepth\"`\n  - `\"fuelMoisture\"`\n  - `\"SAVR\"`\n  - `\"FBFM\"`\n\n### Attribute Descriptions, Units, and Sources\n\n- `fuelLoad` (kg/m²): The mass of the fuel per unit area.\n- `fuelDepth` (m): The depth of the surface fuel bed above the ground.\n- `fuelMoisture` (unitless): The moisture content of the fuel.\n- `SAVR` (1/m): Surface Area to Volume Ratio\n- `FBFM` (unitless): Fire Behavior Fuel Model\n\nEach attribute can be sourced from different data sources. By default, the system will use pre-defined data sources to acquire data for the specified attributes. However, if you want to specify additional information for how to acquire an attribute, you can provide detailed instructions in the request body. This is analogous to ordering a burger at a restaurant:\n\n- If you just order a burger (specify the attribute), you'll get a default burger.\n- If you want pickles, a specific type of cheese, or the meat cooked medium rare, you need to specify those details (provide additional information for the attribute).\n\nTo specify additional information for an attribute, add a field with the attribute name to the request body. For example:\n\n```json\n{\n    \"attributes\": [\"fuelLoad\", \"fuelDepth\", \"fuelMoisture\"],\n    \"fuelLoad\": {\n        \"source\": \"LANDFIRE\",\n        \"product\": \"FBFM40\",\n        \"version\": \"2022\",\n        \"interpolationMethod\": \"nearest\"\n    },\n    \"fuelMoisture\": {\"source\": \"uniform\", \"value\": 0.2}\n}\n```\n\nThis example specifies the specific source, product, version, and interpolation method to use for the `fuelLoad` attribute. For the `fuelMoisture` attribute, it specifies a uniform value of 0.2.\n\nThe general form of this construction is as follows:\n\n- `fuelLoad`, `fuelDepth`, `fuelMoisture`, `SAVR`, `FBFM` (object, optional): The data source for the respective attribute. The structure of these objects depends on the source specified.\n\n#### Uniform Source\n\nIf the source is `\"uniform\"`, the object should have the following fields:\n\n- `value` (float, required): The uniform value for the attribute.\n\n#### LANDFIRE Source\n\nIf the source is `\"LANDFIRE\"`, the object should have the following fields:\n\n- `product` (string, required): The LANDFIRE product to use. Possible values are:\n  - `\"FBFM40\"`\n  - `\"FBFM13\"`\n- `version` (string, required): The version of the LANDFIRE product. Possible values are:\n  - `\"2022\"`\n- `interpolationMethod` (string, required): The interpolation method to use. Possible values are:\n  - `\"nearest\"`\n  - `\"linear\"`\n  - `\"cubic\"`\n  - `\"zipper\"`\n\n##### Fire Behavior Fuel Models (FBFM)\n\n  - `\"FBFM40\"`: Fire Behavior Fuel Model 40 corresponding to the Scott and Burgan (SB40) fuel model set.\n  - `\"FBFM13\"`: Fire Behavior Fuel Model 13 corresponding to the original Anderson (A13) fuel model set.\n\n## Response\n\nIf the request is successful, the endpoint will return a `201 Created` status code and the created surface grid resource in the response body. The response body will be a JSON object with the following fields:\n\n- `status` (string): The status of the surface grid. Will be set to `\"pending\"` initially.\n- `createdOn` (string): The timestamp when the surface grid was created.\n- `modifiedOn` (string): The timestamp when the surface grid was last modified.\n- `checksum` (string): A unique checksum for the surface grid resource.\n- `attributes` (array of strings): The list of attributes included in the surface grid.\n- `fuelLoad`, `fuelDepth`, `fuelMoisture`, `SAVR`, `FBFM` (object): The data source information for the respective attribute.\n\n## Error Responses\n\n- `404 Not Found`: The specified domain does not exist or the user does not have access to it.\n- `422 Unprocessable Entity`: The request body is invalid, the data sources are not compatible with the domain CRS, or required fields are missing.","operationId":"create_surface_grid","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"parameters":[{"name":"domainId","in":"path","required":true,"schema":{"type":"string","title":"Domainid"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateSurfaceGridRequest"},"examples":{"default_attributes":{"value":{"attributes":["fuelLoad","fuelDepth","fuelMoisture"]},"summary":"Default attributes example","description":"This example creates a surface grid with the default attributes. Default configurations and data sources are used for each provided attribute."},"default_attributes_with_attribute_fields":{"value":{"attributes":["fuelLoad","fuelDepth","fuelMoisture"],"fuelLoad":{"source":"LANDFIRE","product":"FBFM40","version":"2022","interpolationMethod":"nearest"},"fuelDepth":{"source":"LANDFIRE","product":"FBFM40","version":"2022","interpolationMethod":"nearest"},"fuelMoisture":{"source":"uniform","value":15}},"summary":"Default attributes with attributes example","description":"This example creates a surface grid with the default attributes. Default configurations and data sources are used for each provided attribute."},"zipper_interpolation":{"value":{"attributes":["fuelLoad","fuelDepth","FBFM"],"fuelLoad":{"source":"LANDFIRE","product":"FBFM40","version":"2022","interpolationMethod":"zipper"},"fuelDepth":{"source":"LANDFIRE","product":"FBFM40","version":"2022","interpolationMethod":"zipper"},"FBFM":{"source":"LANDFIRE","product":"FBFM40","version":"2022","interpolationMethod":"zipper"}},"summary":"Zipper interpolation example","description":"This example creates a surface grid with fuel load, fuel height, and FBFM category attribute data. It applies the zipper interpolation technique to downsample the 30m LANDFIRE data to the specified grid resolution."},"feature_masks":{"value":{"attributes":["fuelLoad","fuelDepth","fuelMoisture"],"fuelLoad":{"source":"LANDFIRE","product":"FBFM40","version":"2022","interpolationMethod":"linear","featureMasks":["road","water"]},"fuelDepth":{"source":"LANDFIRE","product":"FBFM40","version":"2022","interpolationMethod":"linear"},"fuelMoisture":{"source":"uniform","value":15}},"summary":"Feature masks example","description":"This example creates a surface grid with fuel load, fuel depth, and fuel moisture attributes. The fuel load uses the FBFM40 product from LANDFIRE with linear interpolation. It includes feature masks for roads and water which has the effect of setting the fuel load to 0 kg/m^2 anywhere this is an intersection with a road or water feature."},"fbfm_modification":{"value":{"attributes":["FBFM"],"modifications":[{"conditions":{"attribute":"FBFM","operator":"eq","value":"GR1"},"actions":{"attribute":"FBFM","modifier":"replace","value":"GR2"}}]},"summary":"FBFM modification example","description":"This example creates a surface grid with the FBFM attribute. It applies a modification to replace all FBFM values that are GR1 with GR2."},"fuel_load_by_size_class":{"value":{"attributes":["fuelLoad","fuelMoisture"],"fuelLoad":{"source":"LANDFIRE","product":"FBFM40","version":"2022","interpolationMethod":"linear","fractionOneHour":1.0,"fractionTenHour":0.1,"fractionHundredHour":0.0,"fractionLiveHerbaceous":0.0,"fractionLiveWoody":0.0,"curingLiveHerbaceous":0.5,"curingLiveWoody":0.5},"fuelMoisture":{"source":"uniform","value":15}},"summary":"Fuel load by size class example","description":"This example creates a surface grid with the fuel load and fuel moisture attributes. The fuel load uses the FBFM40 product from LANDFIRE with linear interpolation. The fuel moisture uses a uniform value."},"dynamic":{"value":{"attributes":["fuelLoad","fuelMoisture"],"fuelLoad":{"source":"LANDFIRE","product":"FBFM40","version":"2022","interpolationMethod":"linear","fractionOneHour":1.0,"fractionTenHour":0.1,"fractionHundredHour":0.0,"fractionLiveHerbaceous":0.0,"fractionLiveWoody":0.0,"curingLiveHerbaceous":"dynamic","curingLiveWoody":"dynamic"},"fuelMoisture":{"source":"uniformByFBFM40SizeClass","oneHour":0.15,"tenHour":0.2,"hundredHour":0.25,"liveHerbaceous":0.75,"liveWoody":0.9}},"summary":"Dynamic example","description":"This example creates a surface grid with the fuel load and fuel moisture attributes. The fuel load uses the FBFM40 product from LANDFIRE with linear interpolation. The fuel moisture uses uniform values for each size class."}}}}},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SurfaceGrid"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"get":{"tags":["Surface Grid"],"summary":"Get Surface Grid","description":"# Get Surface Grid\n\nThis endpoint retrieves the details of an existing surface grid resource\nfor a specific domain. Users can access the status and metadata of the\nsurface grid that has been created.\n\n## Endpoint\n\n```\nGET /v1/domains/{domainId}/grids/surface\n```\n\n## Path Parameters\n\n- `domainId` (string, required): The unique identifier of the domain for\n  which you want to retrieve the surface grid.\n\n## Response\n\nIf the request is successful, the endpoint will return a `200 OK` status code and the surface grid resource in the response body. The response body will be a JSON object with the following fields:\n\n- `status` (string): The status of the surface grid.\n- `createdOn` (string): The timestamp when the surface grid was created.\n- `modifiedOn` (string): The timestamp when the surface grid was last modified.\n- `checksum` (string): A unique checksum for the surface grid resource.\n- `attributes` (array of strings): The list of attributes included in the surface grid.\n- `fuelLoad`, `fuelDepth`, `fuelMoisture`, `SAVR`, `FBFM` (object): The data source information for the respective attribute.\n\n## Error Responses\n\n- `404 Not Found`: The specified domain does not exist or the user does not have access to it.\n- `404 Not Found`: The surface grid for the specified domain does not exist.","operationId":"get_surface_grid","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"parameters":[{"name":"domainId","in":"path","required":true,"schema":{"type":"string","title":"Domainid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SurfaceGrid"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["Surface Grid"],"summary":"Delete Surface Grid","description":"# Delete Surface Grid\n\nThis endpoint deletes an existing surface grid resource for a specific\ndomain. This action removes the surface grid data from the database and\ncancels any ongoing job execution related to the surface grid.\n\n## Endpoint\n\n```\nDELETE /v1/domains/{domainId}/grids/surface\n```\n\n## Path Parameters\n\n- `domainId` (string, required): The unique identifier of the domain for which you want to delete the surface grid.\n\n## Response\n\nIf the request is successful, the endpoint will return a `204 No Content` status code. This indicates that the surface grid has been successfully deleted and no content is returned in the response body.\n\n## Error Responses\n\n- `404 Not Found`: The specified domain does not exist or the user does not have access to it.\n- `404 Not Found`: The surface grid for the specified domain does not exist.\n\n## Usage Notes\n\n- Deleting a surface grid is a permanent action and cannot be undone. Ensure that you have the correct domain ID before making the delete request.\n- The endpoint will also cancel any ongoing job execution related to the surface grid and remove the associated data from the cache and cloud storage.","operationId":"delete_surface_grid","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"parameters":[{"name":"domainId","in":"path","required":true,"schema":{"type":"string","title":"Domainid"}}],"responses":{"204":{"description":"Successful Response"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/domains/{domainId}/grids/surface/attributes":{"get":{"tags":["Surface Grid"],"summary":"Get Surface Grid Attribute Metadata","description":"# Get Surface Grid Attribute Metadata\n\nRetrieves metadata about the structure of the surface grid and its attributes for a given domain.\n\n## Endpoint\n\n```\nGET /v1/domains/{domainId}/grids/surface/attributes\n```\n\n## Path Parameters\n\n- `domainId` (string, required): Unique identifier of the domain.\n\n## Response\n\n### Success Response (200 OK)\n\nReturns a JSON response containing:\n\n- `shape`: Dimensions of the grid data.\n- `dimensions`: Names of each dimension.\n- `chunks`: Number of chunks in each dimension.\n- `chunkShape`: Shape of each chunk.\n- `attributes`: Detailed information about each available attribute.\n\n### Error Responses\n\n- 404 Not Found: Surface grid not found or not accessible.\n- 422 Unprocessable Entity: Surface grid not in 'completed' status.","operationId":"Get Surface Grid Attribute Metadata","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"parameters":[{"name":"domainId","in":"path","required":true,"schema":{"type":"string","title":"Domainid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GridAttributeMetadataResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/domains/{domainId}/grids/surface/exports/{exportFormat}":{"post":{"tags":["Surface Grid"],"summary":"Create Surface Grid Export","description":"# Create Surface Grid Export\n\n## Endpoint\n\n```\nPOST /v1/domains/{domainId}/grids/surface/exports/{exportFormat}\n```\n\n## Description\n\nThis endpoint initiates the creation of an export file for the surface grid data of a specific domain in the zarr compressed format. The export process runs in the background.\n\n## Path Parameters\n\n- `domainId` (string, required): The unique identifier of the domain.\n- `exportFormat` (string, required): The format for the export. Currently, the supported formats are `\"zarr\"` and `\"geotiff\"`.\n\n## Response\n\nIf successful, returns a `201 Created` status code and a JSON object with:\n\n- `status` (string): Initially set to `\"pending\"`.\n- `createdOn` (string): Timestamp of export request creation.\n- `modifiedOn` (string): Timestamp of last modification.\n- `expiresOn` (string): Expiration timestamp (7 days from creation).\n\n## Error Responses\n\n- `404 Not Found`: Domain not found or user lacks access.\n- `422 Unprocessable Entity`: Invalid export format or request.\n- `429 Too Many Requests`: Error submitting the export job due to resource exhaustion.\n\n## Usage Notes\n\n- Ensure the surface grid for the domain is completed before initiating an export.\n- Check the export status using the GET endpoint.","operationId":"create_surface_grid_export","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"parameters":[{"name":"domainId","in":"path","required":true,"schema":{"type":"string","title":"Domainid"}},{"name":"exportFormat","in":"path","required":true,"schema":{"enum":["zarr","geotiff"],"type":"string","title":"Exportformat"}}],"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Export"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"get":{"tags":["Surface Grid"],"summary":"Get Surface Grid Export","description":"# Get Surface Grid Export\n\n## Endpoint\n\n```\nGET /v1/domains/{domainId}/grids/surface/exports/{exportFormat}\n```\n\n## Description\n\nThis endpoint retrieves the details of a surface grid export request for a specific domain.\n\n## Path Parameters\n\n- `domainId` (string, required): The unique identifier of the domain.\n- `exportFormat` (string, required): The format of the export. Currently, supported formats are `\"zarr\"` and `\"geotiff\"`.\n\n## Response\n\nIf successful, returns a `200 OK` status code and a JSON object with:\n\n- `status` (string): Current status of the export (`\"pending\"`, `\"processing\"`, `\"completed\"`, `\"failed\"`, or `\"expired\"`).\n- `createdOn` (string): Timestamp of export request creation.\n- `modifiedOn` (string): Timestamp of last modification.\n- `expiresOn` (string): Expiration timestamp.\n- `signedUrl` (string, optional): URL to download the exported file, if status is `\"completed\"`.\n\n## Error Responses\n\n- `404 Not Found`: Domain or export request not found.\n\n## Usage Notes\n\n- Use this endpoint to check the status of an export request.\n- When status is `\"completed\"`, use the `signedUrl` to download the file.\n- The signed URL expires 7 days after creation.","operationId":"get_surface_grid_export","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"parameters":[{"name":"domainId","in":"path","required":true,"schema":{"type":"string","title":"Domainid"}},{"name":"exportFormat","in":"path","required":true,"schema":{"enum":["zarr","geotiff"],"type":"string","title":"Exportformat"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Export"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/domains/{domainId}/grids/topography":{"post":{"tags":["Topography Grid"],"summary":"Create Topography Grid","description":"# Create Topography Grid\n\nThis endpoint creates a new topography grid resource for a specific domain.\nTopography grid data represents various topography attributes (e.g.,\nelevation) that exist within the spatial context of a domain.\nThe topography grid data can be generated using a variety of data sources\n(e.g., LANDFIRE, uniform values) and interpolation methods.\n\nOn resource creation, the topography grid data is set to a status of \"pending\".\nThe topography grid data is generated in the background using the specified\nmethod and data sources. Once the topography grid data is generated and\navailable for user access, the status is updated to \"completed\".\n\n## Endpoint\n\n```\nPOST /v1/domains/{domainId}/grids/topography\n```\n\n## Path Parameters\n\n- `domainId` (string, required): The unique identifier of the domain for\n  which you want to create the topography grid.\n\n## Request Body\n\nThe request body should be a JSON object containing the following fields:\n\n- `attributes` (array of strings, required): List of attributes to include in the topography grid. Currently, the only possible value is:\n  - `\"elevation\"`\n\n### Attribute Descriptions and Sources\n\n- `elevation` (m): The elevation of the terrain above sea level.\n- `aspect` (degrees): The aspect of the terrain surface (direction the slope faces).\n- `slope` (degrees): The slope of the terrain surface.\n\nEach attribute can be sourced from different data sources. By default, the system will use pre-defined data sources to acquire data for the specified attributes. However, if you want to specify additional information for how to acquire an attribute, you can provide detailed instructions in the request body.\n\nTo specify additional information for an attribute, add a field with the attribute name to the request body. For example:\n\n```json\n{\n    \"attributes\": [\"elevation\"],\n    \"elevation\": {\n        \"source\": \"LANDFIRE\",\n        \"version\": \"2020\",\n        \"interpolationMethod\": \"linear\"\n    }\n}\n```\n\nThe general form of this construction is as follows:\n\n- `elevation` (object, optional): The data source for the elevation attribute. The structure of this object depends on the source specified.\n\n#### Uniform Source\n\nIf the source is `\"uniform\"`, the object should have the following fields:\n\n- `source` (string, required): Must be `\"uniform\"`.\n- `value` (float, required): The uniform value for the attribute.\n\n#### LANDFIRE Source\n\nIf the source is `\"LANDFIRE\"`, the object should have the following fields:\n\n- `source` (string, required): Must be `\"LANDFIRE\"`.\n- `version` (string, required): The version of the LANDFIRE product. Currently, only `\"2020\"` is supported.\n- `interpolationMethod` (string, required): The interpolation method to use. Possible values are:\n  - `\"nearest\"`\n  - `\"linear\"`\n  - `\"cubic\"`\n  - `\"zipper\"`\n\n## Response\n\nIf the request is successful, the endpoint will return a `201 Created` status code and the created topography grid resource in the response body. The response body will be a JSON object with the following fields:\n\n- `attributes` (array of strings): The list of attributes included in the topography grid.\n- `elevation` (object): The data source information for the elevation attribute.\n- `status` (string): The status of the topography grid. Will be set to `\"pending\"` initially.\n- `createdOn` (string): The timestamp when the topography grid was created.\n- `modifiedOn` (string): The timestamp when the topography grid was last modified.\n- `checksum` (string): A unique checksum for the topography grid resource.\n\n## Error Responses\n\n- `404 Not Found`: The specified domain does not exist or the user does not have access to it.\n- `422 Unprocessable Entity`: The request body is invalid, the data sources are not compatible with the domain CRS, or required fields are missing.","operationId":"create_topography_grid","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"parameters":[{"name":"domainId","in":"path","required":true,"schema":{"type":"string","title":"Domainid"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateTopographyGridRequest"},"examples":{"default_attributes":{"value":{"attributes":["elevation"]},"summary":"Default attributes example","description":"This example creates a topography grid with the default attributes. Default configurations and data sources are used for each provided attribute."},"default_attributes_with_attribute_fields":{"value":{"attributes":["elevation"],"elevation":{"source":"LANDFIRE","version":"2020","interpolationMethod":"cubic"}},"summary":"Default attributes with verbose fields example","description":"This example creates a topography grid with the default attributes and verbose fields. In this case, it is unnecessary to provide the 'elevation' field as all default values are used, but it is included here to show users how they can make modifications to the default data sources and methods."},"nearest_interpolation":{"value":{"attributes":["elevation"],"elevation":{"source":"LANDFIRE","version":"2020","interpolationMethod":"nearest"}},"summary":"Nearest interpolation example","description":"This example creates a topography grid with the default attributes, but uses nearest neighbor interpolation for the LANDFIRE 2020 source elevation data."},"elevation_slope_aspect":{"value":{"attributes":["elevation","slope","aspect"]},"summary":"Elevation, slope, and aspect example","description":"This example creates a topography grid with the elevation, slope, and aspect attributes. Default configurations and data sources are used for each provided attribute."}}}}},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TopographyGrid"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"get":{"tags":["Topography Grid"],"summary":"Get Topography Grid","description":"# Get Topography Grid\n\nThis endpoint retrieves the details of an existing topography grid resource\nfor a specific domain.\n\n## Endpoint\n\n```\nGET /v1/domains/{domainId}/grids/topography\n```\n\n## Path Parameters\n\n- `domainId` (string, required): The unique identifier of the domain for\n  which you want to retrieve the topography grid.\n\n## Response\n\nIf the request is successful, the endpoint will return a `200 OK` status code and the topography grid resource in the response body. The response body will be a JSON object with the following fields:\n\n- `attributes` (array of strings): The list of attributes included in the topography grid (currently only \"elevation\").\n- `elevation` (object): The data source information for the elevation attribute.\n- `status` (string): The current status of the topography grid (e.g., \"pending\", \"completed\").\n- `createdOn` (string): The timestamp when the topography grid was created.\n- `modifiedOn` (string): The timestamp when the topography grid was last modified.\n- `checksum` (string): A unique checksum for the topography grid resource.\n\nThe structure of the `elevation` object will depend on the data source used (LANDFIRE or uniform), as described in the create_topography_grid endpoint documentation.\n\n## Error Responses\n\n- `404 Not Found`: The specified domain does not exist, the user does not have access to it, or the topography grid for the specified domain does not exist.\n\n## Usage Notes\n\n- Use this endpoint to check the status and details of a previously created topography grid.\n- The response will include all the information provided during the creation of the topography grid, along with its current status and timestamps.","operationId":"get_topography_grid","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"parameters":[{"name":"domainId","in":"path","required":true,"schema":{"type":"string","title":"Domainid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TopographyGrid"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["Topography Grid"],"summary":"Delete Topography Grid","description":"# Delete Topography Grid\n\nThis endpoint deletes an existing topography grid resource for a specific\ndomain. This action removes the topography grid data from the database and\ncancels any ongoing job execution related to the topography grid.\n\n## Endpoint\n\n```\nDELETE /v1/domains/{domainId}/grids/topography\n```\n\n## Path Parameters\n\n- `domainId` (string, required): The unique identifier of the domain for which you want to delete the topography grid.\n\n## Response\n\nIf the request is successful, the endpoint will return a `204 No Content` status code. This indicates that the topography grid has been successfully deleted and no content is returned in the response body.\n\n## Error Responses\n\n- `404 Not Found`: The specified domain does not exist or the user does not have access to it.\n- `404 Not Found`: The topography grid for the specified domain does not exist.\n\n## Usage Notes\n\n- Deleting a topography grid is a permanent action and cannot be undone. Ensure that you have the correct domain ID before making the delete request.\n- The endpoint will also cancel any ongoing job execution related to the topography grid and remove the associated data from the cache and cloud storage.","operationId":"delete_topography_grid","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"parameters":[{"name":"domainId","in":"path","required":true,"schema":{"type":"string","title":"Domainid"}}],"responses":{"204":{"description":"Successful Response"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/domains/{domainId}/grids/topography/attributes":{"get":{"tags":["Topography Grid"],"summary":"Get Topography Grid Attribute Metadata","description":"# Get Topography Grid Attribute Metadata\n\nRetrieves metadata about the structure of the topography grid and its attributes for a given domain.\n\n## Endpoint\n\n```\nGET /v1/domains/{domainId}/grids/topography/attributes\n```\n\n## Path Parameters\n\n- `domainId` (string, required): Unique identifier of the domain.\n\n## Response\n\n### Success Response (200 OK)\n\nReturns a JSON response containing:\n\n- `shape`: Dimensions of the grid data.\n- `dimensions`: Names of each dimension.\n- `chunks`: Number of chunks in each dimension.\n- `chunkShape`: Shape of each chunk.\n- `attributes`: Detailed information about each available attribute.\n\n### Error Responses\n\n- 404 Not Found: Topography grid not found or not accessible.\n- 422 Unprocessable Entity: Topography grid not in 'completed' status.","operationId":"Get Topography Grid Attribute Metadata","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"parameters":[{"name":"domainId","in":"path","required":true,"schema":{"type":"string","title":"Domainid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GridAttributeMetadataResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/domains/{domainId}/grids/topography/exports/{exportFormat}":{"post":{"tags":["Topography Grid"],"summary":"Create Topography Grid Export","description":"# Create Topography Grid Export\n\n## Endpoint\n\n```\nPOST /v1/domains/{domainId}/grids/topography/exports/{exportFormat}\n```\n\n## Description\n\nThis endpoint initiates the creation of an export file for the topography grid data of a specific domain in the zarr compressed format. The export process runs in the background.\n\n## Path Parameters\n\n- `domainId` (string, required): The unique identifier of the domain.\n- `exportFormat` (string, required): The format for the export. Currently, only `\"zarr\"` is supported.\n\n## Response\n\nIf successful, returns a `201 Created` status code and a JSON object with:\n\n- `status` (string): Initially set to `\"pending\"`.\n- `createdOn` (string): Timestamp of export request creation.\n- `modifiedOn` (string): Timestamp of last modification.\n- `expiresOn` (string): Expiration timestamp (7 days from creation).\n\n## Error Responses\n\n- `404 Not Found`: Domain not found or user lacks access.\n- `422 Unprocessable Entity`: Invalid export format or request.\n- `429 Too Many Requests`: Error submitting the export job due to resource exhaustion.\n\n## Usage Notes\n\n- Ensure the topography grid for the domain is completed before initiating an export.\n- Check the export status using the GET endpoint.","operationId":"create_topography_grid_export","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"parameters":[{"name":"domainId","in":"path","required":true,"schema":{"type":"string","title":"Domainid"}},{"name":"exportFormat","in":"path","required":true,"schema":{"enum":["zarr","geotiff"],"type":"string","title":"Exportformat"}}],"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Export"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"get":{"tags":["Topography Grid"],"summary":"Get Topography Grid Export","description":"# Get Topography Grid Export\n\n## Endpoint\n\n```\nGET /v1/domains/{domainId}/grids/topography/exports/{exportFormat}\n```\n\n## Description\n\nThis endpoint retrieves the details of a topography grid export request for a specific domain.\n\n## Path Parameters\n\n- `domainId` (string, required): The unique identifier of the domain.\n- `exportFormat` (string, required): The format of the export. Currently, only `\"zarr\"` is supported.\n\n## Response\n\nIf successful, returns a `200 OK` status code and a JSON object with:\n\n- `status` (string): Current status of the export (`\"pending\"`, `\"processing\"`, `\"completed\"`, `\"failed\"`, or `\"expired\"`).\n- `createdOn` (string): Timestamp of export request creation.\n- `modifiedOn` (string): Timestamp of last modification.\n- `expiresOn` (string): Expiration timestamp.\n- `signedUrl` (string, optional): URL to download the exported file, if status is `\"completed\"`.\n\n## Error Responses\n\n- `404 Not Found`: Domain or export request not found.\n\n## Usage Notes\n\n- Use this endpoint to check the status of an export request.\n- When status is `\"completed\"`, use the `signedUrl` to download the file.\n- The signed URL expires 7 days after creation.","operationId":"get_topography_grid_export","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"parameters":[{"name":"domainId","in":"path","required":true,"schema":{"type":"string","title":"Domainid"}},{"name":"exportFormat","in":"path","required":true,"schema":{"enum":["zarr","geotiff"],"type":"string","title":"Exportformat"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Export"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/domains/{domainId}/grids/feature":{"post":{"tags":["Feature Grid"],"summary":"Create Feature Grid","description":"# Create Feature Grid\n\nThis endpoint creates a new feature grid resource for a specific domain. Feature grids\nare used to represent spatial data related to various features within the domain. This\noperation generates a feature grid based on the provided configuration and data sources.\n\n## Endpoint\n\n```\nPOST /v1/domains/{domainId}/grids/feature\n```\n\n## Path Parameters\n\n- `domainId` (string, required): The unique identifier of the domain for which you want to create the feature grid.\n\n## Request Body\n\nThe request body should be a JSON object adhering to the `CreateFeatureGridRequest` model, containing\nthe necessary configuration and data source information for generating the feature grid.\n\n## Response\n\nIf the request is successful, the endpoint will return a `201 Created` status code and the created feature grid resource in the response body. The response body will include the following fields:\n\n- `createdOn` (string): The timestamp when the feature grid was created.\n- `modifiedOn` (string): The timestamp when the feature grid was last modified.\n- `status` (string): The status of the feature grid, initially set to `\"PENDING\"`.\n- `checksum` (string): A unique checksum for the feature grid resource.\n\n## Error Responses\n\n- `404 Not Found`: The specified domain does not exist or the user does not have access to it.\n- `429 Too Many Requests`: The system is currently overloaded, and the job could not be submitted.\n\n## Usage Notes\n\n- If an existing feature grid already exists for the domain, its associated job execution will be canceled before creating the new grid.\n- The feature grid generation is handled as a background job. The status will initially be `\"PENDING\"` and will be updated once the job completes.\n- The system will attempt to remove any cached data related to the previous feature grid.","operationId":"create_feature_grid","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"parameters":[{"name":"domainId","in":"path","required":true,"schema":{"type":"string","title":"Domainid"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateFeatureGridRequest"},"examples":{"default_attributes":{"value":{"attributes":["road","water"]},"summary":"Road and Water attributes example","description":"This example creates a feature grid using both road and water feature data."}}}}},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/FeatureGrid"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"get":{"tags":["Feature Grid"],"summary":"Get Feature Grid","description":"# Get Feature Grid\n\nThis endpoint retrieves the feature grid data for a specific domain. Feature grids\nrepresent spatial data related to various features within the domain. If the feature grid\ndata has been generated and stored, it will be returned in the response.\n\n## Endpoint\n\n```\nGET /v1/domains/{domainId}/grids/feature\n```\n\n## Path Parameters\n\n- `domainId` (string, required): The unique identifier of the domain for which you want to retrieve the feature grid.\n\n## Response\n\nIf the feature grid data exists, the endpoint will return a `200 OK` status code and the feature grid resource in the response body. The response will be a JSON object adhering to the `FeatureGrid` model, which includes:\n\n- `createdOn` (string): The timestamp when the feature grid was created.\n- `modifiedOn` (string): The timestamp when the feature grid was last modified.\n- `status` (string): The current status of the feature grid.\n- `checksum` (string): A unique checksum for the feature grid resource.\n\n## Error Responses\n\n- `404 Not Found`: The feature grid data has not been created for the specified domain, or it cannot be retrieved.\n\n## Usage Notes\n\n- Ensure that the `domainId` provided is correct and that the user has the appropriate permissions to access the domain's data.\n- The feature grid data is retrieved from the database, and if it does not exist, a `404 Not Found` error will be returned.","operationId":"get_feature_grid","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"parameters":[{"name":"domainId","in":"path","required":true,"schema":{"type":"string","title":"Domainid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/FeatureGrid"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["Feature Grid"],"summary":"Delete Feature Grid","description":"# Delete Feature Grid\n\nThis endpoint deletes the feature grid data for a specific domain. If the feature grid exists,\nit will be removed from the database, and any associated resources, such as files in the GCS bucket,\nwill be deleted asynchronously.\n\n## Endpoint\n\n```\nDELETE /v1/domains/{domainId}/grids/feature\n```\n\n## Path Parameters\n\n- `domainId` (string, required): The unique identifier of the domain for which you want to delete the feature grid.\n\n## Response\n\n- `204 No Content`: The feature grid was successfully deleted. The response body will be empty.\n\n## Error Responses\n\n- `404 Not Found`: The specified domain or feature grid does not exist or the user does not have access to it.\n\n## Usage Notes\n\n- Ensure that the `domainId` provided is correct and that the user has the appropriate permissions to delete the domain's data.\n- The feature grid data is removed from the database, and any running jobs related to the feature grid are canceled in the background.\n- The associated Zarr group in the GCS bucket is deleted asynchronously.","operationId":"delete_feature_grid","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"parameters":[{"name":"domainId","in":"path","required":true,"schema":{"type":"string","title":"Domainid"}}],"responses":{"204":{"description":"Successful Response"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/v1/domains/{domainId}/grids/feature/attributes":{"get":{"tags":["Feature Grid"],"summary":"Get Feature Grid Attribute Metadata","description":"# Get Feature Grid Attribute Metadata\n\nRetrieves metadata about the structure of the feature grid and its attributes for a given domain.\n\n## Endpoint\n\n```\nGET /v1/domains/{domainId}/grids/feature/attributes\n```\n\n## Path Parameters\n\n- `domainId` (string, required): Unique identifier of the domain.\n\n## Response\n\n### Success Response (200 OK)\n\nReturns a JSON response containing:\n\n- `shape`: Dimensions of the grid data.\n- `dimensions`: Names of each dimension.\n- `chunks`: Number of chunks in each dimension.\n- `chunkShape`: Shape of each chunk.\n- `attributes`: Detailed information about each available attribute.\n\n### Error Responses\n\n- 404 Not Found: Feature grid not found or not accessible.\n- 422 Unprocessable Entity: Feature grid not in 'completed' status.","operationId":"Get Feature Grid Attribute Metadata","security":[{"APIKeyHeader":[]},{"HTTPBearer":[]}],"parameters":[{"name":"domainId","in":"path","required":true,"schema":{"type":"string","title":"Domainid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GridAttributeMetadataResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"Access":{"type":"string","enum":["personal","application"],"title":"Access","description":"Enumerates the available access types for an API key."},"Application":{"properties":{"name":{"type":"string","title":"Name","description":"A name for the application."},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description","description":"An optional description for the application."},"id":{"type":"string","title":"Id","description":"Unique identifier for the application."},"ownerId":{"type":"string","title":"Ownerid","description":"Unique identifier of the user that adimisters the application."},"createdOn":{"type":"string","format":"date-time","title":"Createdon","description":"The date and time the application was created."},"modifiedOn":{"type":"string","format":"date-time","title":"Modifiedon","description":"The date and time the application was modified."}},"type":"object","required":["name","id","ownerId"],"title":"Application","description":"Represents an application that can access the FastFuels API on behalf of non-FastFuels users."},"CreateApplicationRequest":{"properties":{"name":{"type":"string","title":"Name","description":"A name for the application."},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description","description":"An optional description for the application."}},"type":"object","required":["name"],"title":"CreateApplicationRequest","description":"Request body for creating a new application."},"CreateDomainRequest":{"oneOf":[{"$ref":"#/components/schemas/CreateDomainRequestFeature"},{"$ref":"#/components/schemas/CreateDomainRequestFeatureCollection"}],"title":"CreateDomainRequest","discriminator":{"propertyName":"type","mapping":{"Feature":"#/components/schemas/CreateDomainRequestFeature","FeatureCollection":"#/components/schemas/CreateDomainRequestFeatureCollection"}}},"CreateDomainRequestFeature":{"properties":{"type":{"type":"string","enum":["Feature"],"const":"Feature","title":"Type","default":"Feature"},"geometry":{"oneOf":[{"$ref":"#/components/schemas/Point"},{"$ref":"#/components/schemas/MultiPoint"},{"$ref":"#/components/schemas/LineString"},{"$ref":"#/components/schemas/MultiLineString"},{"$ref":"#/components/schemas/Polygon"},{"$ref":"#/components/schemas/MultiPolygon"}],"title":"Geometry","discriminator":{"propertyName":"type","mapping":{"LineString":"#/components/schemas/LineString","MultiLineString":"#/components/schemas/MultiLineString","MultiPoint":"#/components/schemas/MultiPoint","MultiPolygon":"#/components/schemas/MultiPolygon","Point":"#/components/schemas/Point","Polygon":"#/components/schemas/Polygon"}}},"properties":{"anyOf":[{"type":"object"},{"type":"null"}],"title":"Properties"},"name":{"type":"string","title":"Name","description":"The name of the domain.","default":""},"description":{"type":"string","title":"Description","description":"A brief description of the domain.","default":""},"horizontalResolution":{"type":"number","title":"Horizontalresolution","description":"The horizontal resolution in meters of a regular grid representation of the domain.","default":2.0},"verticalResolution":{"type":"number","title":"Verticalresolution","description":"The vertical resolution in meters of a regular grid representation of the domain.","default":1.0},"crs":{"allOf":[{"$ref":"#/components/schemas/GeoJsonCRS"}],"description":"The GeoJSON specification formatted coordinate reference system (CRS) of the domain."},"tags":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Tags","description":"A list of tags associated with the domain.","default":[]}},"type":"object","required":["geometry"],"title":"CreateDomainRequestFeature"},"CreateDomainRequestFeatureCollection":{"properties":{"type":{"type":"string","enum":["FeatureCollection"],"const":"FeatureCollection","title":"Type","default":"FeatureCollection"},"features":{"items":{"$ref":"#/components/schemas/GeoJSONFeature"},"type":"array","minItems":1,"title":"Features"},"name":{"type":"string","title":"Name","description":"The name of the domain.","default":""},"description":{"type":"string","title":"Description","description":"A brief description of the domain.","default":""},"horizontalResolution":{"type":"number","title":"Horizontalresolution","description":"The horizontal resolution in meters of a regular grid representation of the domain.","default":2.0},"verticalResolution":{"type":"number","title":"Verticalresolution","description":"The vertical resolution in meters of a regular grid representation of the domain.","default":1.0},"crs":{"allOf":[{"$ref":"#/components/schemas/GeoJsonCRS"}],"description":"The GeoJSON specification formatted coordinate reference system (CRS) of the domain."},"tags":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Tags","description":"A list of tags associated with the domain.","default":[]}},"type":"object","required":["features"],"title":"CreateDomainRequestFeatureCollection"},"CreateFeatureGridRequest":{"properties":{"attributes":{"items":{"$ref":"#/components/schemas/FeatureGridAttribute"},"type":"array","title":"Attributes","description":"List of feature types to rasterize."}},"type":"object","required":["attributes"],"title":"CreateFeatureGridRequest"},"CreateKeyRequest":{"properties":{"name":{"type":"string","title":"Name","description":"A name to semantically identify the key."},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description","description":"An optional description of the keys purpose."},"validDays":{"type":"integer","title":"Validdays","description":"Number of days for which this key will be valid.","default":30},"scopes":{"items":{"$ref":"#/components/schemas/Scope"},"type":"array","title":"Scopes","description":"A list of scopes available to the key.","default":["read"]},"access":{"allOf":[{"$ref":"#/components/schemas/Access"}],"description":"Access type for the API key","default":"personal"},"applicationId":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Applicationid","description":"Application ID accessed by the API key"}},"type":"object","required":["name"],"title":"CreateKeyRequest","description":"Request body for creating an API key resource"},"CreateRoadFeatureRequest":{"properties":{"sources":{"items":{"$ref":"#/components/schemas/RoadFeatureSource"},"type":"array","title":"Sources","description":"List of sources of road features"}},"type":"object","required":["sources"],"title":"CreateRoadFeatureRequest"},"CreateSurfaceGridRequest":{"properties":{"attributes":{"items":{"$ref":"#/components/schemas/SurfaceGridAttribute"},"type":"array","minItems":1,"title":"Attributes","description":"List of attributes to include in the surface grid"},"fuelLoad":{"anyOf":[{"oneOf":[{"$ref":"#/components/schemas/LandfireSurfaceGridFuelLoadSource"},{"$ref":"#/components/schemas/SurfaceGridUniformValue"},{"$ref":"#/components/schemas/UniformFBFM40SizeClassValue"}],"discriminator":{"propertyName":"source","mapping":{"LANDFIRE":"#/components/schemas/LandfireSurfaceGridFuelLoadSource","uniform":"#/components/schemas/SurfaceGridUniformValue","uniformByFBFM40SizeClass":"#/components/schemas/UniformFBFM40SizeClassValue"}}},{"type":"null"}],"title":"Fuelload"},"fuelDepth":{"anyOf":[{"oneOf":[{"$ref":"#/components/schemas/LandfireSurfaceGridSource"},{"$ref":"#/components/schemas/SurfaceGridUniformValue"}],"discriminator":{"propertyName":"source","mapping":{"LANDFIRE":"#/components/schemas/LandfireSurfaceGridSource","uniform":"#/components/schemas/SurfaceGridUniformValue"}}},{"type":"null"}],"title":"Fueldepth"},"fuelMoisture":{"anyOf":[{"oneOf":[{"$ref":"#/components/schemas/SurfaceGridUniformValue"},{"$ref":"#/components/schemas/UniformFBFM40SizeClassValue"}],"discriminator":{"propertyName":"source","mapping":{"uniform":"#/components/schemas/SurfaceGridUniformValue","uniformByFBFM40SizeClass":"#/components/schemas/UniformFBFM40SizeClassValue"}}},{"type":"null"}],"title":"Fuelmoisture"},"SAVR":{"anyOf":[{"oneOf":[{"$ref":"#/components/schemas/LandfireSurfaceGridSource"},{"$ref":"#/components/schemas/SurfaceGridUniformValue"}],"discriminator":{"propertyName":"source","mapping":{"LANDFIRE":"#/components/schemas/LandfireSurfaceGridSource","uniform":"#/components/schemas/SurfaceGridUniformValue"}}},{"type":"null"}],"title":"Savr"},"FBFM":{"anyOf":[{"oneOf":[{"$ref":"#/components/schemas/LandfireSurfaceGridSource"}],"discriminator":{"propertyName":"source","mapping":{"LANDFIRE":"#/components/schemas/LandfireSurfaceGridSource"}}},{"type":"null"}],"title":"Fbfm"},"modifications":{"items":{"$ref":"#/components/schemas/SurfaceGridModification"},"type":"array","maxItems":1000,"title":"ListSurfaceGridModifications","description":"List of modifications to apply to the surface grid","default":[]}},"type":"object","required":["attributes"],"title":"CreateSurfaceGridRequest"},"CreateTopographyGridRequest":{"properties":{"attributes":{"items":{"$ref":"#/components/schemas/TopographyGridAttribute"},"type":"array","title":"Attributes","description":"List of attributes to include in the surface grid"},"elevation":{"anyOf":[{"$ref":"#/components/schemas/LandfireTopographyGridSource"},{"$ref":"#/components/schemas/TopographyGridUniformValue"},{"type":"null"}],"title":"Elevation"},"aspect":{"anyOf":[{"$ref":"#/components/schemas/LandfireTopographyGridSourceAspect"},{"type":"null"}]},"slope":{"anyOf":[{"$ref":"#/components/schemas/LandfireTopographyGridSource"},{"type":"null"}]}},"type":"object","required":["attributes"],"title":"CreateTopographyGridRequest"},"CreateTreeGridRequest":{"properties":{"attributes":{"items":{"$ref":"#/components/schemas/TreeGridAttribute"},"type":"array","title":"Attributes","description":"List of attributes to include in the tree grid. Each attribute is a separate layer in the grid. Attributes present in the list will be assigned default values unless an additional field is provided.","default":["bulkDensity","fuelMoisture"]},"bulkDensity":{"anyOf":[{"oneOf":[{"$ref":"#/components/schemas/TreeGridInventorySource"},{"$ref":"#/components/schemas/TreeGridUniformValue"}],"discriminator":{"propertyName":"source","mapping":{"TreeInventory":"#/components/schemas/TreeGridInventorySource","uniform":"#/components/schemas/TreeGridUniformValue"}}},{"type":"null"}],"title":"Bulkdensity"},"fuelMoisture":{"anyOf":[{"oneOf":[{"$ref":"#/components/schemas/TreeGridUniformValue"}],"discriminator":{"propertyName":"source","mapping":{"uniform":"#/components/schemas/TreeGridUniformValue"}}},{"type":"null"}],"title":"Fuelmoisture"},"SPCD":{"anyOf":[{"oneOf":[{"$ref":"#/components/schemas/TreeGridInventorySource"},{"$ref":"#/components/schemas/TreeGridUniformValue"}],"discriminator":{"propertyName":"source","mapping":{"TreeInventory":"#/components/schemas/TreeGridInventorySource","uniform":"#/components/schemas/TreeGridUniformValue"}}},{"type":"null"}],"title":"Spcd"}},"type":"object","title":"CreateTreeGridRequest","description":"The request used to create a tree grid."},"CreateTreeInventoryRequest":{"properties":{"sources":{"items":{"$ref":"#/components/schemas/TreeInventorySource"},"type":"array","maxItems":1,"minItems":1,"title":"Sources","description":"The data sources used to build the tree inventory. Currently, only one data source at a time is supported."},"TreeMap":{"anyOf":[{"$ref":"#/components/schemas/TreeMapSource"},{"type":"null"}]},"modifications":{"items":{"$ref":"#/components/schemas/TreeInventoryModification"},"type":"array","maxItems":1000,"title":"ListTreeInventoryModifications","description":"List of modifications to apply to the tree inventory data","default":[]},"treatments":{"items":{"oneOf":[{"$ref":"#/components/schemas/DirectionalThinning"},{"$ref":"#/components/schemas/ProportionalThinning"}],"discriminator":{"propertyName":"method","mapping":{"directionalThinning":"#/components/schemas/DirectionalThinning","proportionalThinning":"#/components/schemas/ProportionalThinning"}}},"type":"array","maxItems":1000,"title":"Treatments","description":"List of silvicultural treatments to apply.","default":[]},"featureMasks":{"items":{"$ref":"#/components/schemas/FeatureType"},"type":"array","title":"Featuremasks","description":"List of Features to mask tree inventory data. This has the effect of removing trees that intersect with the feature.","default":[]}},"type":"object","required":["sources"],"title":"CreateTreeInventoryRequest"},"CreateWaterFeatureRequest":{"properties":{"sources":{"items":{"$ref":"#/components/schemas/WaterFeatureSource"},"type":"array","title":"Sources","description":"List of sources of road features"}},"type":"object","required":["sources"],"title":"CreateWaterFeatureRequest"},"DirectionalThinning":{"properties":{"method":{"type":"string","enum":["directionalThinning"],"const":"directionalThinning","title":"Method","default":"directionalThinning"},"direction":{"allOf":[{"$ref":"#/components/schemas/ThinningDirection"}],"default":"below"},"targetMetric":{"type":"string","enum":["diameter","basalArea"],"title":"Targetmetric","default":"diameter"},"targetValue":{"type":"number","minimum":0.0,"title":"Targetvalue"}},"type":"object","required":["targetValue"],"title":"DirectionalThinning"},"Domain":{"properties":{"type":{"type":"string","enum":["FeatureCollection"],"const":"FeatureCollection","title":"Type","default":"FeatureCollection"},"features":{"items":{"$ref":"#/components/schemas/GeoJSONFeature"},"type":"array","minItems":1,"title":"Features"},"name":{"type":"string","title":"Name","description":"The name of the domain.","default":""},"description":{"type":"string","title":"Description","description":"A brief description of the domain.","default":""},"horizontalResolution":{"type":"number","title":"Horizontalresolution","description":"The horizontal resolution in meters of a regular grid representation of the domain.","default":2.0},"verticalResolution":{"type":"number","title":"Verticalresolution","description":"The vertical resolution in meters of a regular grid representation of the domain.","default":1.0},"crs":{"allOf":[{"$ref":"#/components/schemas/GeoJsonCRS"}],"description":"The GeoJSON specification formatted coordinate reference system (CRS) of the domain."},"tags":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Tags","description":"A list of tags associated with the domain.","default":[]},"id":{"type":"string","title":"Id","description":"A unique identifier for the domain."},"createdOn":{"type":"string","format":"date-time","title":"Createdon","description":"The date and time the domain was created."},"modifiedOn":{"type":"string","format":"date-time","title":"Modifiedon","description":"The date and time the domain was last modified."}},"type":"object","required":["features","createdOn","modifiedOn"],"title":"Domain","description":"Represents a domain resource."},"DomainSortField":{"type":"string","enum":["createdOn","modifiedOn","name"],"title":"DomainSortField","description":"Enum for sorting domain resources by field."},"DomainSortOrder":{"type":"string","enum":["ascending","descending"],"title":"DomainSortOrder","description":"Enum for sorting domain resources by order."},"Export":{"properties":{"domainId":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Domainid","description":"The domain ID."},"resource":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Resource","description":"The resource to export."},"subResource":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Subresource","description":"The sub-resource to export."},"attribute":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Attribute","description":"The attribute to export."},"format":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Format","description":"The format to export the resource in."},"status":{"anyOf":[{"$ref":"#/components/schemas/ExportStatus"},{"type":"null"}],"description":"The status of the export job."},"createdOn":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"Createdon","description":"The date and time the export job was created."},"modifiedOn":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"Modifiedon","description":"The date and time the export job was last modified."},"signedUrl":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Signedurl","description":"The signed URL to download the exported file."},"expiresOn":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"Expireson","description":"The date and time the export job will expire."}},"type":"object","title":"Export","description":"Request to export a resource"},"ExportStatus":{"type":"string","enum":["pending","running","failed","completed","expired"],"title":"ExportStatus"},"FBFM40":{"type":"string","enum":["NB1","NB2","NB3","NB8","NB9","GR1","GR2","GR3","GR4","GR5","GR6","GR7","GR8","GR9","GS1","GS2","GS3","GS4","SH1","SH2","SH3","SH4","SH5","SH6","SH7","SH8","SH9","TU1","TU2","TU3","TU4","TU5","TL1","TL2","TL3","TL4","TL5","TL6","TL7","TL8","TL9","SB1","SB2","SB3","SB4"],"title":"FBFM40"},"FeatureGrid":{"properties":{"attributes":{"items":{"$ref":"#/components/schemas/FeatureGridAttribute"},"type":"array","title":"Attributes","description":"List of feature types to rasterize."},"status":{"anyOf":[{"$ref":"#/components/schemas/JobStatus"},{"type":"null"}]},"createdOn":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"Createdon"},"modifiedOn":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"Modifiedon"},"checksum":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Checksum"}},"type":"object","required":["attributes"],"title":"FeatureGrid"},"FeatureGridAttribute":{"type":"string","enum":["road","water"],"title":"FeatureGridAttribute"},"FeatureStatus":{"type":"string","enum":["pending","running","completed","failed"],"title":"FeatureStatus"},"FeatureType":{"type":"string","enum":["road","water"],"title":"FeatureType"},"Features":{"properties":{"road":{"anyOf":[{"$ref":"#/components/schemas/RoadFeature"},{"type":"null"}]},"water":{"anyOf":[{"$ref":"#/components/schemas/WaterFeature"},{"type":"null"}]}},"type":"object","title":"Features"},"GeoJSONFeature":{"properties":{"type":{"type":"string","enum":["Feature"],"const":"Feature","title":"Type","default":"Feature"},"geometry":{"oneOf":[{"$ref":"#/components/schemas/Point"},{"$ref":"#/components/schemas/MultiPoint"},{"$ref":"#/components/schemas/LineString"},{"$ref":"#/components/schemas/MultiLineString"},{"$ref":"#/components/schemas/Polygon"},{"$ref":"#/components/schemas/MultiPolygon"}],"title":"Geometry","discriminator":{"propertyName":"type","mapping":{"LineString":"#/components/schemas/LineString","MultiLineString":"#/components/schemas/MultiLineString","MultiPoint":"#/components/schemas/MultiPoint","MultiPolygon":"#/components/schemas/MultiPolygon","Point":"#/components/schemas/Point","Polygon":"#/components/schemas/Polygon"}}},"properties":{"anyOf":[{"type":"object"},{"type":"null"}],"title":"Properties"}},"type":"object","required":["geometry"],"title":"GeoJSONFeature","description":"A GeoJSON Feature object."},"GeoJsonCRS":{"properties":{"type":{"type":"string","enum":["name"],"const":"name","title":"Type","default":"name"},"properties":{"$ref":"#/components/schemas/GeoJsonCRSProperties"}},"type":"object","required":["properties"],"title":"GeoJsonCRS"},"GeoJsonCRSProperties":{"properties":{"name":{"type":"string","title":"Name","default":"EPSG:4326"}},"type":"object","title":"GeoJsonCRSProperties"},"GridAttributeMetadataResponse":{"properties":{"shape":{"items":{"type":"integer"},"type":"array","maxItems":3,"minItems":2,"title":"Shape","description":"The total shape of the grid data."},"dimensions":{"items":{"type":"string"},"type":"array","maxItems":3,"minItems":2,"title":"Dimensions","description":"A text descriptor of each dimension in the grid data."},"chunks":{"items":{"type":"integer"},"type":"array","maxItems":3,"minItems":2,"title":"Chunks","description":"The number of chunks in each dimension."},"chunkShape":{"items":{"type":"integer"},"type":"array","maxItems":3,"minItems":2,"title":"Chunkshape","description":"The shape of each chunk."},"attributes":{"items":{"type":"object"},"type":"array","title":"Attributes","description":"Information about each attribute in the grid data."}},"type":"object","required":["shape","dimensions","chunks","chunkShape","attributes"],"title":"GridAttributeMetadataResponse"},"Grids":{"properties":{"tree":{"anyOf":[{"$ref":"#/components/schemas/TreeGrid"},{"type":"null"}]},"surface":{"anyOf":[{"$ref":"#/components/schemas/SurfaceGrid"},{"type":"null"}]},"topography":{"anyOf":[{"$ref":"#/components/schemas/TopographyGrid"},{"type":"null"}]},"feature":{"anyOf":[{"$ref":"#/components/schemas/FeatureGrid"},{"type":"null"}]}},"type":"object","title":"Grids"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"InterpolationMethod":{"type":"string","enum":["nearest","linear","cubic","zipper"],"title":"InterpolationMethod"},"Inventories":{"properties":{"tree":{"anyOf":[{"$ref":"#/components/schemas/TreeInventory"},{"type":"null"}]}},"type":"object","title":"Inventories"},"JobStatus":{"type":"string","enum":["pending","running","failed","completed"],"title":"JobStatus"},"Key":{"properties":{"name":{"type":"string","title":"Name","description":"A name to semantically identify the key."},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description","description":"An optional description of the keys purpose."},"validDays":{"type":"integer","title":"Validdays","description":"Number of days for which this key will be valid.","default":30},"scopes":{"items":{"$ref":"#/components/schemas/Scope"},"type":"array","title":"Scopes","description":"A list of scopes available to the key.","default":["read"]},"access":{"allOf":[{"$ref":"#/components/schemas/Access"}],"description":"Access type for the API key","default":"personal"},"applicationId":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Applicationid","description":"Application ID accessed by the API key"},"id":{"type":"string","title":"Id","description":"Unique identifier for the key that also serves as the access token."},"createdOn":{"type":"string","format":"date-time","title":"Createdon","description":"The date and time the key was created."},"expiresOn":{"type":"string","format":"date-time","title":"Expireson","description":"The date at which this key is no longer valid."},"ownerId":{"type":"string","title":"Ownerid","description":"The unique ID of the user who generated the key."}},"type":"object","required":["name","id","ownerId"],"title":"Key","description":"Represents an API key used to authenticate users accessing the API programmatically"},"LandfireFBFM40FuelLoadSource":{"properties":{"featureMasks":{"items":{"$ref":"#/components/schemas/FeatureType"},"type":"array","title":"Featuremasks","description":"List of feature masks to apply to the surface grid attribute","default":[]},"source":{"type":"string","enum":["LANDFIRE"],"const":"LANDFIRE","title":"Source","default":"LANDFIRE"},"product":{"type":"string","enum":["FBFM40"],"const":"FBFM40","title":"Product","default":"FBFM40"},"version":{"type":"string","enum":["2022"],"const":"2022","title":"Version","default":"2022"},"interpolationMethod":{"allOf":[{"$ref":"#/components/schemas/InterpolationMethod"}],"default":"nearest"},"fractionOneHour":{"type":"number","minimum":0.0,"title":"Fractiononehour","description":"Fraction of fuel load from the 1-hour size class category to include in the total fuel load. Can be greater than 1 to include more than 100% of the fuel load, and must be greater than or equal to 0.","default":1.0},"fractionTenHour":{"type":"number","minimum":0.0,"title":"Fractiontenhour","description":"Fraction of fuel load from the 10-hour size class category to include in the total fuel load. Can be greater than 1 to include more than 100% of the fuel load, and must be greater than or equal to 0.","default":0.1},"fractionHundredHour":{"type":"number","minimum":0.0,"title":"Fractionhundredhour","description":"Fraction of fuel load from the 100-hour size class category to include in the total fuel load. Can be greater than 1 to include more than 100% of the fuel load, and must be greater than or equal to 0.","default":0.0},"fractionLiveHerbaceous":{"type":"number","minimum":0.0,"title":"Fractionliveherbaceous","description":"Fraction of fuel load from the live herbaceous category to include in the total fuel load. Can be greater than 1 to include more than 100% of the fuel load, and must be greater than or equal to 0.","default":0.0},"fractionLiveWoody":{"type":"number","minimum":0.0,"title":"Fractionlivewoody","description":"Fraction of fuel load from the live woody category to include in the total fuel load. Can be greater than 1 to include more than 100% of the fuel load, and must be greater than or equal to 0.","default":0.0},"curingLiveHerbaceous":{"anyOf":[{"type":"number","minimum":0.0},{"type":"string","enum":["dynamic"],"const":"dynamic"}],"title":"Curingliveherbaceous","description":"Curing level (%) for live herbaceous fuel. Can be 'dynamic' to use the dynamic fuel model based on the live fuel moisture content. In that case, a fuel moisture content must be provided for the live herbaceous size class.","default":0.25},"curingLiveWoody":{"anyOf":[{"type":"number","minimum":0.0},{"type":"string","enum":["dynamic"],"const":"dynamic"}],"title":"Curinglivewoody","description":"Curing level (%) for live woody fuel. Can be 'dynamic' to use the dynamic fuel model based on the live fuel moisture content. In that case, a fuel moisture content must be provided for the live woody size class.","default":0.1}},"type":"object","title":"LandfireFBFM40FuelLoadSource"},"LandfireFBFM40Source":{"properties":{"featureMasks":{"items":{"$ref":"#/components/schemas/FeatureType"},"type":"array","title":"Featuremasks","description":"List of feature masks to apply to the surface grid attribute","default":[]},"source":{"type":"string","enum":["LANDFIRE"],"const":"LANDFIRE","title":"Source","default":"LANDFIRE"},"product":{"type":"string","enum":["FBFM40"],"const":"FBFM40","title":"Product","default":"FBFM40"},"version":{"type":"string","enum":["2022"],"const":"2022","title":"Version","default":"2022"},"interpolationMethod":{"allOf":[{"$ref":"#/components/schemas/InterpolationMethod"}],"default":"nearest"}},"type":"object","title":"LandfireFBFM40Source"},"LandfireSurfaceGridFuelLoadSource":{"oneOf":[{"$ref":"#/components/schemas/LandfireFBFM40FuelLoadSource"}],"title":"LandfireSurfaceGridFuelLoadSource","discriminator":{"propertyName":"product","mapping":{"FBFM40":"#/components/schemas/LandfireFBFM40FuelLoadSource"}}},"LandfireSurfaceGridSource":{"oneOf":[{"$ref":"#/components/schemas/LandfireFBFM40Source"}],"title":"LandfireSurfaceGridSource","discriminator":{"propertyName":"product","mapping":{"FBFM40":"#/components/schemas/LandfireFBFM40Source"}}},"LandfireTopographyGridSource":{"properties":{"source":{"type":"string","enum":["LANDFIRE"],"const":"LANDFIRE","title":"Source","default":"LANDFIRE"},"version":{"type":"string","enum":["2020"],"const":"2020","title":"Version","default":"2020"},"interpolationMethod":{"allOf":[{"$ref":"#/components/schemas/InterpolationMethod"}],"default":"linear"}},"type":"object","title":"LandfireTopographyGridSource"},"LandfireTopographyGridSourceAspect":{"properties":{"source":{"type":"string","enum":["LANDFIRE"],"const":"LANDFIRE","title":"Source","default":"LANDFIRE"},"version":{"type":"string","enum":["2020"],"const":"2020","title":"Version","default":"2020"},"interpolationMethod":{"type":"string","enum":["nearest"],"const":"nearest","title":"Interpolationmethod","default":"nearest"}},"type":"object","title":"LandfireTopographyGridSourceAspect"},"LineString":{"properties":{"type":{"type":"string","enum":["LineString"],"const":"LineString","title":"Type","default":"LineString"},"coordinates":{"items":{"$ref":"#/components/schemas/Position"},"type":"array","title":"Coordinates"}},"type":"object","required":["coordinates"],"title":"LineString"},"ListApplicationsResponse":{"properties":{"currentPage":{"type":"integer","title":"Currentpage","description":"The current page number."},"pageSize":{"type":"integer","title":"Pagesize","description":"The number of resources per page."},"totalItems":{"type":"integer","title":"Totalitems","description":"The total number of resources."},"applications":{"items":{"$ref":"#/components/schemas/Application"},"type":"array","title":"Applications","description":"A list of applications."}},"type":"object","required":["currentPage","pageSize","totalItems","applications"],"title":"ListApplicationsResponse","description":"Paginated response for listing applications."},"ListDomainResponse":{"properties":{"currentPage":{"type":"integer","title":"Currentpage","description":"The current page number."},"pageSize":{"type":"integer","title":"Pagesize","description":"The number of resources per page."},"totalItems":{"type":"integer","title":"Totalitems","description":"The total number of resources."},"domains":{"items":{"$ref":"#/components/schemas/Domain"},"type":"array","title":"Domains","description":"A list of domain resources."}},"type":"object","required":["currentPage","pageSize","totalItems","domains"],"title":"ListDomainResponse","description":"Paginated response for listing domain resources."},"ListKeysResponse":{"properties":{"currentPage":{"type":"integer","title":"Currentpage","description":"The current page number."},"pageSize":{"type":"integer","title":"Pagesize","description":"The number of resources per page."},"totalItems":{"type":"integer","title":"Totalitems","description":"The total number of resources."},"keys":{"items":{"$ref":"#/components/schemas/Key"},"type":"array","title":"Keys","description":"A list of API keys."}},"type":"object","required":["currentPage","pageSize","totalItems","keys"],"title":"ListKeysResponse","description":"Paginated response for listing API keys."},"Modifier":{"type":"string","enum":["multiply","divide","add","subtract","replace"],"title":"Modifier"},"MultiLineString":{"properties":{"type":{"type":"string","enum":["MultiLineString"],"const":"MultiLineString","title":"Type","default":"MultiLineString"},"coordinates":{"items":{"items":{"$ref":"#/components/schemas/Position"},"type":"array"},"type":"array","title":"Coordinates"}},"type":"object","required":["coordinates"],"title":"MultiLineString"},"MultiPoint":{"properties":{"type":{"type":"string","enum":["MultiPoint"],"const":"MultiPoint","title":"Type","default":"MultiPoint"},"coordinates":{"items":{"$ref":"#/components/schemas/Position"},"type":"array","title":"Coordinates"}},"type":"object","required":["coordinates"],"title":"MultiPoint"},"MultiPolygon":{"properties":{"type":{"type":"string","enum":["MultiPolygon"],"const":"MultiPolygon","title":"Type","default":"MultiPolygon"},"coordinates":{"items":{"items":{"items":{"$ref":"#/components/schemas/Position"},"type":"array"},"type":"array"},"type":"array","title":"Coordinates"}},"type":"object","required":["coordinates"],"title":"MultiPolygon"},"Operator":{"type":"string","enum":["eq","ne","gt","lt","ge","le"],"title":"Operator"},"Point":{"properties":{"type":{"type":"string","enum":["Point"],"const":"Point","title":"Type","default":"Point"},"coordinates":{"$ref":"#/components/schemas/Position"}},"type":"object","required":["coordinates"],"title":"Point"},"Polygon":{"properties":{"type":{"type":"string","enum":["Polygon"],"const":"Polygon","title":"Type","default":"Polygon"},"coordinates":{"items":{"items":{"$ref":"#/components/schemas/Position"},"type":"array"},"type":"array","title":"Coordinates"}},"type":"object","required":["coordinates"],"title":"Polygon"},"Position":{"items":{"type":"number"},"type":"array","maxItems":3,"minItems":2,"title":"Position"},"ProportionalThinning":{"properties":{"method":{"type":"string","enum":["proportionalThinning"],"const":"proportionalThinning","title":"Method","default":"proportionalThinning"},"targetMetric":{"type":"string","enum":["basalArea"],"const":"basalArea","title":"Targetmetric","default":"basalArea"},"targetValue":{"type":"number","minimum":0.0,"title":"Targetvalue"}},"type":"object","required":["targetValue"],"title":"ProportionalThinning"},"RoadFeature":{"properties":{"sources":{"items":{"$ref":"#/components/schemas/RoadFeatureSource"},"type":"array","title":"Sources","description":"List of sources of road features"},"status":{"allOf":[{"$ref":"#/components/schemas/FeatureStatus"}],"default":"pending"},"createdOn":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"Createdon"},"modifiedOn":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"Modifiedon"},"checksum":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Checksum"}},"type":"object","required":["sources"],"title":"RoadFeature"},"RoadFeatureSource":{"type":"string","enum":["OSM","File","FeatureCollection"],"title":"RoadFeatureSource"},"Scope":{"type":"string","enum":["read","write"],"title":"Scope","description":"Enumerates the available scopes or permissions attached to an API key."},"SurfaceGrid":{"properties":{"attributes":{"anyOf":[{"items":{"$ref":"#/components/schemas/SurfaceGridAttribute"},"type":"array"},{"type":"null"}],"title":"Attributes"},"fuelLoad":{"anyOf":[{"oneOf":[{"$ref":"#/components/schemas/LandfireSurfaceGridFuelLoadSource"},{"$ref":"#/components/schemas/SurfaceGridUniformValue"},{"$ref":"#/components/schemas/UniformFBFM40SizeClassValue"}],"discriminator":{"propertyName":"source","mapping":{"LANDFIRE":"#/components/schemas/LandfireSurfaceGridFuelLoadSource","uniform":"#/components/schemas/SurfaceGridUniformValue","uniformByFBFM40SizeClass":"#/components/schemas/UniformFBFM40SizeClassValue"}}},{"type":"null"}],"title":"Fuelload"},"fuelDepth":{"anyOf":[{"oneOf":[{"$ref":"#/components/schemas/LandfireSurfaceGridSource"},{"$ref":"#/components/schemas/SurfaceGridUniformValue"}],"discriminator":{"propertyName":"source","mapping":{"LANDFIRE":"#/components/schemas/LandfireSurfaceGridSource","uniform":"#/components/schemas/SurfaceGridUniformValue"}}},{"type":"null"}],"title":"Fueldepth"},"fuelMoisture":{"anyOf":[{"oneOf":[{"$ref":"#/components/schemas/SurfaceGridUniformValue"},{"$ref":"#/components/schemas/UniformFBFM40SizeClassValue"}],"discriminator":{"propertyName":"source","mapping":{"uniform":"#/components/schemas/SurfaceGridUniformValue","uniformByFBFM40SizeClass":"#/components/schemas/UniformFBFM40SizeClassValue"}}},{"type":"null"}],"title":"Fuelmoisture"},"SAVR":{"anyOf":[{"oneOf":[{"$ref":"#/components/schemas/LandfireSurfaceGridSource"},{"$ref":"#/components/schemas/SurfaceGridUniformValue"}],"discriminator":{"propertyName":"source","mapping":{"LANDFIRE":"#/components/schemas/LandfireSurfaceGridSource","uniform":"#/components/schemas/SurfaceGridUniformValue"}}},{"type":"null"}],"title":"Savr"},"FBFM":{"anyOf":[{"oneOf":[{"$ref":"#/components/schemas/LandfireSurfaceGridSource"}],"discriminator":{"propertyName":"source","mapping":{"LANDFIRE":"#/components/schemas/LandfireSurfaceGridSource"}}},{"type":"null"}],"title":"Fbfm"},"modifications":{"items":{"$ref":"#/components/schemas/SurfaceGridModification"},"type":"array","maxItems":1000,"title":"ListSurfaceGridModifications","description":"List of modifications to apply to the surface grid","default":[]},"status":{"anyOf":[{"$ref":"#/components/schemas/JobStatus"},{"type":"null"}]},"createdOn":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"Createdon"},"modifiedOn":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"Modifiedon"},"checksum":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Checksum"}},"type":"object","title":"SurfaceGrid"},"SurfaceGridAttribute":{"type":"string","enum":["fuelLoad","fuelDepth","fuelMoisture","SAVR","FBFM"],"title":"SurfaceGridAttribute"},"SurfaceGridModification":{"properties":{"conditions":{"items":{"oneOf":[{"$ref":"#/components/schemas/SurfaceGridModificationFBFMCondition"},{"$ref":"#/components/schemas/SurfaceGridModificationFuelLoadCondition"},{"$ref":"#/components/schemas/SurfaceGridModificationFuelHeightCondition"},{"$ref":"#/components/schemas/SurfaceGridModificationFuelMoistureCondition"}],"title":"SurfaceGridModificationCondition","description":"The conditions for the surface grid modification.","discriminator":{"propertyName":"attribute","mapping":{"FBFM":"#/components/schemas/SurfaceGridModificationFBFMCondition","fuelDepth":"#/components/schemas/SurfaceGridModificationFuelHeightCondition","fuelLoad":"#/components/schemas/SurfaceGridModificationFuelLoadCondition","fuelMoisture":"#/components/schemas/SurfaceGridModificationFuelMoistureCondition"}}},"type":"array","title":"ListSurfaceGridModificationConditions","description":"The conditions for the surface grid modification."},"actions":{"items":{"oneOf":[{"$ref":"#/components/schemas/SurfaceGridModificationFBFMAction"},{"$ref":"#/components/schemas/SurfaceGridModificationFuelLoadAction"},{"$ref":"#/components/schemas/SurfaceGridModificationFuelHeightAction"},{"$ref":"#/components/schemas/SurfaceGridModificationFuelMoistureAction"}],"title":"SurfaceGridModificationAction","description":"The actions for the surface grid modification.","discriminator":{"propertyName":"attribute","mapping":{"FBFM":"#/components/schemas/SurfaceGridModificationFBFMAction","fuelDepth":"#/components/schemas/SurfaceGridModificationFuelHeightAction","fuelLoad":"#/components/schemas/SurfaceGridModificationFuelLoadAction","fuelMoisture":"#/components/schemas/SurfaceGridModificationFuelMoistureAction"}}},"type":"array","minItems":1,"title":"ListSurfaceGridModificationActions","description":"The actions for the surface grid modification."}},"type":"object","required":["conditions","actions"],"title":"SurfaceGridModification"},"SurfaceGridModificationFBFMAction":{"properties":{"attribute":{"type":"string","enum":["FBFM"],"const":"FBFM","title":"Attribute"},"modifier":{"type":"string","enum":["replace"],"const":"replace","title":"Modifier"},"value":{"$ref":"#/components/schemas/FBFM40"}},"type":"object","required":["attribute","modifier","value"],"title":"SurfaceGridModificationFBFMAction"},"SurfaceGridModificationFBFMCondition":{"properties":{"attribute":{"type":"string","enum":["FBFM"],"const":"FBFM","title":"Attribute"},"operator":{"type":"string","enum":["eq"],"const":"eq","title":"Operator"},"value":{"$ref":"#/components/schemas/FBFM40"}},"type":"object","required":["attribute","operator","value"],"title":"SurfaceGridModificationFBFMCondition"},"SurfaceGridModificationFuelHeightAction":{"properties":{"attribute":{"type":"string","enum":["fuelDepth"],"const":"fuelDepth","title":"Attribute"},"modifier":{"$ref":"#/components/schemas/Modifier"},"value":{"type":"number","minimum":0.0,"title":"Value"}},"type":"object","required":["attribute","modifier","value"],"title":"SurfaceGridModificationFuelHeightAction"},"SurfaceGridModificationFuelHeightCondition":{"properties":{"attribute":{"type":"string","enum":["fuelDepth"],"const":"fuelDepth","title":"Attribute"},"operator":{"$ref":"#/components/schemas/Operator"},"value":{"type":"number","minimum":0.0,"title":"Value"}},"type":"object","required":["attribute","operator","value"],"title":"SurfaceGridModificationFuelHeightCondition"},"SurfaceGridModificationFuelLoadAction":{"properties":{"attribute":{"type":"string","enum":["fuelLoad"],"const":"fuelLoad","title":"Attribute"},"modifier":{"$ref":"#/components/schemas/Modifier"},"value":{"type":"number","minimum":0.0,"title":"Value"}},"type":"object","required":["attribute","modifier","value"],"title":"SurfaceGridModificationFuelLoadAction"},"SurfaceGridModificationFuelLoadCondition":{"properties":{"attribute":{"type":"string","enum":["fuelLoad"],"const":"fuelLoad","title":"Attribute"},"operator":{"$ref":"#/components/schemas/Operator"},"value":{"type":"number","minimum":0.0,"title":"Value"}},"type":"object","required":["attribute","operator","value"],"title":"SurfaceGridModificationFuelLoadCondition"},"SurfaceGridModificationFuelMoistureAction":{"properties":{"attribute":{"type":"string","enum":["fuelMoisture"],"const":"fuelMoisture","title":"Attribute"},"modifier":{"$ref":"#/components/schemas/Modifier"},"value":{"type":"number","minimum":0.0,"title":"Value"}},"type":"object","required":["attribute","modifier","value"],"title":"SurfaceGridModificationFuelMoistureAction"},"SurfaceGridModificationFuelMoistureCondition":{"properties":{"attribute":{"type":"string","enum":["fuelMoisture"],"const":"fuelMoisture","title":"Attribute"},"operator":{"$ref":"#/components/schemas/Operator"},"value":{"type":"number","minimum":0.0,"title":"Value"}},"type":"object","required":["attribute","operator","value"],"title":"SurfaceGridModificationFuelMoistureCondition"},"SurfaceGridUniformValue":{"properties":{"featureMasks":{"items":{"$ref":"#/components/schemas/FeatureType"},"type":"array","title":"Featuremasks","description":"List of feature masks to apply to the surface grid attribute","default":[]},"source":{"type":"string","enum":["uniform"],"const":"uniform","title":"Source","default":"uniform"},"value":{"type":"number","minimum":0.0,"title":"Value"}},"type":"object","required":["value"],"title":"SurfaceGridUniformValue"},"ThinningDirection":{"type":"string","enum":["below","above"],"title":"ThinningDirection"},"TopographyGrid":{"properties":{"attributes":{"anyOf":[{"items":{"$ref":"#/components/schemas/TopographyGridAttribute"},"type":"array"},{"type":"null"}],"title":"Attributes"},"elevation":{"anyOf":[{"$ref":"#/components/schemas/LandfireTopographyGridSource"},{"$ref":"#/components/schemas/TopographyGridUniformValue"},{"type":"null"}],"title":"Elevation"},"aspect":{"anyOf":[{"$ref":"#/components/schemas/LandfireTopographyGridSourceAspect"},{"type":"null"}]},"slope":{"anyOf":[{"$ref":"#/components/schemas/LandfireTopographyGridSource"},{"type":"null"}]},"status":{"anyOf":[{"$ref":"#/components/schemas/JobStatus"},{"type":"null"}]},"createdOn":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"Createdon"},"modifiedOn":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"Modifiedon"},"checksum":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Checksum"}},"type":"object","title":"TopographyGrid"},"TopographyGridAttribute":{"type":"string","enum":["elevation","slope","aspect"],"title":"TopographyGridAttribute"},"TopographyGridUniformValue":{"properties":{"source":{"type":"string","enum":["uniform"],"const":"uniform","title":"Source","default":"uniform"},"value":{"type":"number","title":"Value"}},"type":"object","required":["value"],"title":"TopographyGridUniformValue"},"TreeGrid":{"properties":{"attributes":{"items":{"$ref":"#/components/schemas/TreeGridAttribute"},"type":"array","title":"Attributes","description":"List of attributes to include in the tree grid. Each attribute is a separate layer in the grid. Attributes present in the list will be assigned default values unless an additional field is provided.","default":["bulkDensity","fuelMoisture"]},"bulkDensity":{"anyOf":[{"oneOf":[{"$ref":"#/components/schemas/TreeGridInventorySource"},{"$ref":"#/components/schemas/TreeGridUniformValue"}],"discriminator":{"propertyName":"source","mapping":{"TreeInventory":"#/components/schemas/TreeGridInventorySource","uniform":"#/components/schemas/TreeGridUniformValue"}}},{"type":"null"}],"title":"Bulkdensity"},"fuelMoisture":{"anyOf":[{"oneOf":[{"$ref":"#/components/schemas/TreeGridUniformValue"}],"discriminator":{"propertyName":"source","mapping":{"uniform":"#/components/schemas/TreeGridUniformValue"}}},{"type":"null"}],"title":"Fuelmoisture"},"SPCD":{"anyOf":[{"oneOf":[{"$ref":"#/components/schemas/TreeGridInventorySource"},{"$ref":"#/components/schemas/TreeGridUniformValue"}],"discriminator":{"propertyName":"source","mapping":{"TreeInventory":"#/components/schemas/TreeGridInventorySource","uniform":"#/components/schemas/TreeGridUniformValue"}}},{"type":"null"}],"title":"Spcd"},"status":{"allOf":[{"$ref":"#/components/schemas/JobStatus"}],"default":"pending"},"createdOn":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"Createdon"},"modifiedOn":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"Modifiedon"},"checksum":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Checksum"},"treeInventoryChecksum":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Treeinventorychecksum"}},"type":"object","title":"TreeGrid"},"TreeGridAttribute":{"type":"string","enum":["bulkDensity","fuelMoisture","SPCD"],"title":"TreeGridAttribute","description":"The attributes that can be used to generate a tree grid."},"TreeGridInventorySource":{"properties":{"source":{"type":"string","enum":["TreeInventory"],"const":"TreeInventory","title":"Source","default":"TreeInventory"}},"type":"object","title":"TreeGridInventorySource"},"TreeGridUniformValue":{"properties":{"source":{"type":"string","enum":["uniform"],"const":"uniform","title":"Source","default":"uniform"},"value":{"type":"number","title":"Value"}},"type":"object","required":["value"],"title":"TreeGridUniformValue"},"TreeInventory":{"properties":{"sources":{"items":{"$ref":"#/components/schemas/TreeInventorySource"},"type":"array","maxItems":1,"minItems":1,"title":"Sources","description":"The data sources used to build the tree inventory. Currently, only one data source at a time is supported."},"TreeMap":{"anyOf":[{"$ref":"#/components/schemas/TreeMapSource"},{"type":"null"}]},"modifications":{"items":{"$ref":"#/components/schemas/TreeInventoryModification"},"type":"array","maxItems":1000,"title":"ListTreeInventoryModifications","description":"List of modifications to apply to the tree inventory data","default":[]},"treatments":{"items":{"oneOf":[{"$ref":"#/components/schemas/DirectionalThinning"},{"$ref":"#/components/schemas/ProportionalThinning"}],"discriminator":{"propertyName":"method","mapping":{"directionalThinning":"#/components/schemas/DirectionalThinning","proportionalThinning":"#/components/schemas/ProportionalThinning"}}},"type":"array","maxItems":1000,"title":"Treatments","description":"List of silvicultural treatments to apply.","default":[]},"featureMasks":{"items":{"$ref":"#/components/schemas/FeatureType"},"type":"array","title":"Featuremasks","description":"List of Features to mask tree inventory data. This has the effect of removing trees that intersect with the feature.","default":[]},"status":{"allOf":[{"$ref":"#/components/schemas/JobStatus"}],"default":"pending"},"createdOn":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"Createdon"},"modifiedOn":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"Modifiedon"},"checksum":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Checksum"},"domainId":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Domainid"}},"type":"object","required":["sources"],"title":"TreeInventory"},"TreeInventoryModification":{"properties":{"conditions":{"items":{"oneOf":[{"$ref":"#/components/schemas/TreeInventoryModificationSPCDCondition"},{"$ref":"#/components/schemas/TreeInventoryModificationHTCondition"},{"$ref":"#/components/schemas/TreeInventoryModificationDIACondition"},{"$ref":"#/components/schemas/TreeInventoryModificationCRCondition"}],"title":"TreeInventoryModificationCondition","description":"The conditions for the tree inventory modification.","discriminator":{"propertyName":"attribute","mapping":{"CR":"#/components/schemas/TreeInventoryModificationCRCondition","DIA":"#/components/schemas/TreeInventoryModificationDIACondition","HT":"#/components/schemas/TreeInventoryModificationHTCondition","SPCD":"#/components/schemas/TreeInventoryModificationSPCDCondition"}}},"type":"array","title":"ListTreeInventoryModificationConditions","description":"The conditions for the tree inventory modification."},"actions":{"items":{"oneOf":[{"$ref":"#/components/schemas/TreeInventoryModificationSPCDAction"},{"$ref":"#/components/schemas/TreeInventoryModificationHTAction"},{"$ref":"#/components/schemas/TreeInventoryModificationDIAAction"},{"$ref":"#/components/schemas/TreeInventoryModificationCRAction"},{"$ref":"#/components/schemas/TreeInventoryModificationRemoveAction"}],"title":"TreeInventoryModificationAction","description":"The actions for the tree inventory modification.","discriminator":{"propertyName":"attribute","mapping":{"CR":"#/components/schemas/TreeInventoryModificationCRAction","DIA":"#/components/schemas/TreeInventoryModificationDIAAction","HT":"#/components/schemas/TreeInventoryModificationHTAction","SPCD":"#/components/schemas/TreeInventoryModificationSPCDAction","all":"#/components/schemas/TreeInventoryModificationRemoveAction"}}},"type":"array","minItems":1,"title":"ListTreeInventoryModificationActions","description":"The actions for the tree inventory modification."}},"type":"object","required":["conditions","actions"],"title":"TreeInventoryModification"},"TreeInventoryModificationCRAction":{"properties":{"attribute":{"type":"string","enum":["CR"],"const":"CR","title":"Attribute"},"modifier":{"$ref":"#/components/schemas/Modifier"},"value":{"type":"number","maximum":1.0,"exclusiveMinimum":0.0,"title":"Value"}},"type":"object","required":["attribute","modifier","value"],"title":"TreeInventoryModificationCRAction"},"TreeInventoryModificationCRCondition":{"properties":{"attribute":{"type":"string","enum":["CR"],"const":"CR","title":"Attribute"},"operator":{"$ref":"#/components/schemas/Operator"},"value":{"type":"number","maximum":1.0,"exclusiveMinimum":0.0,"title":"Value"}},"type":"object","required":["attribute","operator","value"],"title":"TreeInventoryModificationCRCondition"},"TreeInventoryModificationDIAAction":{"properties":{"attribute":{"type":"string","enum":["DIA"],"const":"DIA","title":"Attribute"},"modifier":{"$ref":"#/components/schemas/Modifier"},"value":{"type":"number","minimum":0.0,"title":"Value"}},"type":"object","required":["attribute","modifier","value"],"title":"TreeInventoryModificationDIAAction"},"TreeInventoryModificationDIACondition":{"properties":{"attribute":{"type":"string","enum":["DIA"],"const":"DIA","title":"Attribute"},"operator":{"$ref":"#/components/schemas/Operator"},"value":{"type":"number","minimum":0.0,"title":"Value"}},"type":"object","required":["attribute","operator","value"],"title":"TreeInventoryModificationDIACondition"},"TreeInventoryModificationHTAction":{"properties":{"attribute":{"type":"string","enum":["HT"],"const":"HT","title":"Attribute"},"modifier":{"$ref":"#/components/schemas/Modifier"},"value":{"type":"number","minimum":0.0,"title":"Value"}},"type":"object","required":["attribute","modifier","value"],"title":"TreeInventoryModificationHTAction"},"TreeInventoryModificationHTCondition":{"properties":{"attribute":{"type":"string","enum":["HT"],"const":"HT","title":"Attribute"},"operator":{"$ref":"#/components/schemas/Operator"},"value":{"type":"number","minimum":0.0,"title":"Value"}},"type":"object","required":["attribute","operator","value"],"title":"TreeInventoryModificationHTCondition"},"TreeInventoryModificationRemoveAction":{"properties":{"attribute":{"type":"string","enum":["all"],"const":"all","title":"Attribute"},"modifier":{"type":"string","enum":["remove"],"const":"remove","title":"Modifier","default":"remove"}},"type":"object","required":["attribute"],"title":"TreeInventoryModificationRemoveAction"},"TreeInventoryModificationSPCDAction":{"properties":{"attribute":{"type":"string","enum":["SPCD"],"const":"SPCD","title":"Attribute"},"modifier":{"type":"string","enum":["replace"],"const":"replace","title":"Modifier"},"value":{"type":"integer","title":"Value"}},"type":"object","required":["attribute","modifier","value"],"title":"TreeInventoryModificationSPCDAction"},"TreeInventoryModificationSPCDCondition":{"properties":{"attribute":{"type":"string","enum":["SPCD"],"const":"SPCD","title":"Attribute"},"operator":{"type":"string","enum":["eq"],"const":"eq","title":"Operator"},"value":{"type":"integer","title":"Value"}},"type":"object","required":["attribute","operator","value"],"title":"TreeInventoryModificationSPCDCondition"},"TreeInventorySource":{"type":"string","enum":["TreeMap"],"const":"TreeMap","title":"TreeInventorySource"},"TreeMapSource":{"properties":{"version":{"allOf":[{"$ref":"#/components/schemas/TreeMapVersion"}],"default":"2016"},"seed":{"type":"integer","title":"Seed"}},"type":"object","title":"TreeMapSource"},"TreeMapVersion":{"type":"string","enum":["2014","2016"],"title":"TreeMapVersion"},"UniformFBFM40SizeClassValue":{"properties":{"featureMasks":{"items":{"$ref":"#/components/schemas/FeatureType"},"type":"array","title":"Featuremasks","description":"List of feature masks to apply to the surface grid attribute","default":[]},"source":{"type":"string","enum":["uniformByFBFM40SizeClass"],"const":"uniformByFBFM40SizeClass","title":"Source","default":"uniformByFBFM40SizeClass"},"oneHour":{"type":"number","minimum":0.0,"title":"Onehour"},"tenHour":{"type":"number","minimum":0.0,"title":"Tenhour"},"hundredHour":{"type":"number","minimum":0.0,"title":"Hundredhour"},"liveHerbaceous":{"type":"number","minimum":0.0,"title":"Liveherbaceous"},"liveWoody":{"type":"number","minimum":0.0,"title":"Livewoody"}},"type":"object","required":["oneHour","tenHour","hundredHour","liveHerbaceous","liveWoody"],"title":"UniformFBFM40SizeClassValue"},"UpdateDomainRequest":{"properties":{"name":{"type":"string","title":"Name","description":"The name of the domain."},"description":{"type":"string","title":"Description","description":"A brief description of the domain."},"tags":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Tags","description":"A list of tags associated with the domain."}},"type":"object","title":"UpdateDomainRequest","description":"Request body for updating a domain resource."},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"},"WaterFeature":{"properties":{"sources":{"items":{"$ref":"#/components/schemas/WaterFeatureSource"},"type":"array","title":"Sources","description":"List of sources of road features"},"status":{"allOf":[{"$ref":"#/components/schemas/FeatureStatus"}],"default":"pending"},"createdOn":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"Createdon"},"modifiedOn":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"Modifiedon"},"checksum":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Checksum"}},"type":"object","required":["sources"],"title":"WaterFeature"},"WaterFeatureSource":{"type":"string","enum":["OSM","File","FeatureCollection"],"title":"WaterFeatureSource"}},"securitySchemes":{"APIKeyHeader":{"type":"apiKey","in":"header","name":"api-key"},"HTTPBearer":{"type":"http","scheme":"bearer"}}}}